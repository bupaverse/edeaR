[{"path":[]},{"path":"https://bupaverse.github.io/edeaR/articles/filters.html","id":"filter-activities","dir":"Articles","previous_headings":"Event filters","what":"Filter activities","title":"Filters","text":"filter activity function can used filter activities name. three arguments event log vector activities reverse argument (FALSE TRUE) one can see, 2 distinct activities left event log.","code":"patients %>%     filter_activity(c(\"X-Ray\", \"Blood test\")) %>%     summary ## Number of events:  996 ## Number of cases:  498 ## Number of traces:  2 ## Number of distinct activities:  2 ## Average trace length:  2 ##  ## Start eventlog:  2017-01-05 08:59:04 ## End eventlog:  2018-05-05 01:34:30 ##                   handling     patient          employee handling_id        ##  Blood test           :474   Length:996         r1:  0   Length:996         ##  Check-out            :  0   Class :character   r2:  0   Class :character   ##  Discuss Results      :  0   Mode  :character   r3:474   Mode  :character   ##  MRI SCAN             :  0                      r4:  0                      ##  Registration         :  0                      r5:522                      ##  Triage and Assessment:  0                      r6:  0                      ##  X-Ray                :522                      r7:  0                      ##  registration_type      time                            .order      ##  complete:498      Min.   :2017-01-05 08:59:04.00   Min.   :  1.0   ##  start   :498      1st Qu.:2017-05-06 12:31:43.00   1st Qu.:249.8   ##                    Median :2017-09-08 00:10:11.00   Median :498.5   ##                    Mean   :2017-09-03 07:11:55.96   Mean   :498.5   ##                    3rd Qu.:2017-12-23 02:06:20.50   3rd Qu.:747.2   ##                    Max.   :2018-05-05 01:34:30.00   Max.   :996.0   ##"},{"path":"https://bupaverse.github.io/edeaR/articles/filters.html","id":"filter-on-activity-frequency","dir":"Articles","previous_headings":"Event filters","what":"Filter on activity frequency","title":"Filters","text":"also possible filter activity frequency. filter uses percentile cut , look activities frequent required percentage events reached. Thus, percentile cut 80% look activities needed represent 80% events. example , least frequent activities covering 50% event log selected, since reverse argument true.","code":"patients %>%     filter_activity_frequency(percentage = 0.5, reverse = T) %>%     activity_frequency(\"activity\") ## # A tibble: 4 × 3 ##   handling   absolute relative ##   <fct>         <int>    <dbl> ## 1 Check-out       492    0.401 ## 2 X-Ray           261    0.213 ## 3 Blood test      237    0.193 ## 4 MRI SCAN        236    0.192"},{"path":"https://bupaverse.github.io/edeaR/articles/filters.html","id":"filter-on-attributes","dir":"Articles","previous_headings":"Event filters","what":"Filter on attributes","title":"Filters","text":"filter_attributes function generic function can supplied conditions data set, way dplyr::filter function. , allows filter event case attributes. Multiple conditions can listed, separated comma. case, comma treated “”. can use |-symbol state “”. Since patients dataset many additional attributes, example uses resource activity. filter thus combination filter_activity filter_resource, case conditions required. However, advantange stating conditions .","code":"patients %>%      filter_attributes(employee == \"r1\" | handling == \"X-Ray\") ## Warning: `filter_attributes()` was deprecated in bupaR 0.5.0. ## Please use `filter()` instead. ## This warning is displayed once every 8 hours. ## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated. ## # Log of 1522 events consisting of: ## 2 traces  ## 500 cases  ## 761 instances of 2 activities  ## 2 resources  ## Events occurred from 2017-01-02 11:41:53 until 2018-05-05 01:34:30  ##   ## # Variables were mapped as follows: ## Case identifier:        patient  ## Activity identifier:     handling  ## Resource identifier:     employee  ## Activity instance identifier:    handling_id  ## Timestamp:           time  ## Lifecycle transition:        registration_type  ##  ## # A tibble: 1,522 × 7 ##    handling     patient employee handling_id regist…¹ time                .order ##    <fct>        <chr>   <fct>    <chr>       <fct>    <dttm>               <int> ##  1 Registration 1       r1       1           start    2017-01-02 11:41:53      1 ##  2 Registration 2       r1       2           start    2017-01-02 11:41:53      2 ##  3 Registration 3       r1       3           start    2017-01-04 01:34:05      3 ##  4 Registration 4       r1       4           start    2017-01-04 01:34:04      4 ##  5 Registration 5       r1       5           start    2017-01-04 16:07:47      5 ##  6 Registration 6       r1       6           start    2017-01-04 16:07:47      6 ##  7 Registration 7       r1       7           start    2017-01-05 04:56:11      7 ##  8 Registration 8       r1       8           start    2017-01-05 04:56:11      8 ##  9 Registration 9       r1       9           start    2017-01-06 05:58:54      9 ## 10 Registration 10      r1       10          start    2017-01-06 05:58:54     10 ## # … with 1,512 more rows, and abbreviated variable name ¹​registration_type ## # ℹ Use `print(n = ...)` to see more rows"},{"path":"https://bupaverse.github.io/edeaR/articles/filters.html","id":"filter-resources","dir":"Articles","previous_headings":"Event filters","what":"Filter resources","title":"Filters","text":"Similar activity filter, resource filter can used filter events listing resources.","code":"patients %>%     filter_resource(c(\"r1\",\"r4\")) %>%     resource_frequency(\"resource\") ## # A tibble: 736 × 4 ##    employee handling_id absolute relative ##    <fct>    <chr>          <int>    <dbl> ##  1 r1       1                  2  0.00136 ##  2 r1       10                 2  0.00136 ##  3 r1       100                2  0.00136 ##  4 r1       101                2  0.00136 ##  5 r1       102                2  0.00136 ##  6 r1       103                2  0.00136 ##  7 r1       104                2  0.00136 ##  8 r1       105                2  0.00136 ##  9 r1       106                2  0.00136 ## 10 r1       107                2  0.00136 ## # … with 726 more rows ## # ℹ Use `print(n = ...)` to see more rows"},{"path":"https://bupaverse.github.io/edeaR/articles/filters.html","id":"trim-cases","dir":"Articles","previous_headings":"Event filters","what":"Trim cases","title":"Filters","text":"trim filter special event filter, also take account notion cases. fact, trim cases start certain activities end certain activity. requires two list: one possible start activities one end activities. cases trimmed first appearance start activity till last appearance end activity. reversed, slices event log removed instead preserved.","code":"patients %>%     filter_trim(start_activities = \"Registration\", end_activities =  c(\"MRI SCAN\",\"X-Ray\")) %>%     traces() ## # A tibble: 2 × 3 ##   trace                                                  absolute_freq…¹ relat…² ##   <chr>                                                            <int>   <dbl> ## 1 Registration,Triage and Assessment,X-Ray                           261   0.525 ## 2 Registration,Triage and Assessment,Blood test,MRI SCAN             236   0.475 ## # … with abbreviated variable names ¹​absolute_frequency, ²​relative_frequency"},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/articles/filters.html","id":"filter-activity-presence","dir":"Articles","previous_headings":"Case filters","what":"Filter activity presence","title":"Filters","text":"functions allows filter cases contain certain activities. requires input vector containing one activity labels method argument. latter can values , none one_of. set , means specified activity labels must present case selected, none means allowed present, one_of means least one must present.","code":""},{"path":"https://bupaverse.github.io/edeaR/articles/filters.html","id":"filter-case","dir":"Articles","previous_headings":"Case filters","what":"Filter case","title":"Filters","text":"case filter allows subset set case identifiers. arguments requires vector case id’s. selection can also negated using reverse = T.","code":""},{"path":"https://bupaverse.github.io/edeaR/articles/filters.html","id":"filter-end-points","dir":"Articles","previous_headings":"Case filters","what":"Filter end points","title":"Filters","text":"filter_endpoints method filters cases based first last activity label. can used two ways: specifying vectors allowed start activities /allowed end activities, specifying percentile. latter case, percentile value used cut . example, set 0.9, select common endpoint pairs together cover least 90% cases, filter event log accordingly. filter can also reversed.","code":""},{"path":"https://bupaverse.github.io/edeaR/articles/filters.html","id":"filter-precedence","dir":"Articles","previous_headings":"Case filters","what":"Filter precedence","title":"Filters","text":"order extract subset event log conforms set precedence rules, one can use filter_precedence method. two types precendence relations can tested: activities directly follow , activities eventually follow . type can set precedence_type argument. , filter requires vector one antecedents (containing activity labels), one consequents. Finally, also filter_method argument can set. argument relevant one antecedent consequent. case, can specify possible precedence combinations must present (), least one (_one_of).","code":""},{"path":"https://bupaverse.github.io/edeaR/articles/filters.html","id":"filter-processing-time-throughput-time-and-trace-length","dir":"Articles","previous_headings":"Case filters","what":"Filter processing time, throughput time and trace length","title":"Filters","text":"three different filters take account length case: processing time: sum duration activity instances contained case. throughput time: time first event last event case. trace length: number activity instances contained case. filters can work two ways, similar endpoints filter: either using interval using percentile cut . percentile cut always start shortest cases first stop including cases specified percentile reached. processing throughput time filters also units attribute specify time unit used defining interval. methods can reversed setting reverse = T.","code":""},{"path":"https://bupaverse.github.io/edeaR/articles/filters.html","id":"filter-time-period","dir":"Articles","previous_headings":"Case filters","what":"Filter time period","title":"Filters","text":"Cases can also filtered supplying time window method filter_time_period. four different filter methods, one can used argument: contained: retains cases completely contained time period. start: retains cases started time period, regardless end point. complete: retains cases completed time period, regardless starting point. intersecting: retains cases least one event within time period. selection can also reversed. Note 5 filter method, trim, actually event filter thus discussed next section.","code":""},{"path":"https://bupaverse.github.io/edeaR/articles/filters.html","id":"filter-trace-frequency","dir":"Articles","previous_headings":"Case filters","what":"Filter trace frequency","title":"Filters","text":"last case filter can used filter cases based frequency corresponding trace. trace sequence activity labels, discussed detail Section . two ways select cases based trace frequency, interval percentile cut . percentile cut start frequent traces. filter also contains reverse argument.","code":""},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/articles/metrics.html","id":"idle-time","dir":"Articles","previous_headings":"Time perspective","what":"Idle Time","title":"Metrics","text":"idle time time activity case resource. can calculated start end timestamps available activity instances. can computed levels trace, resource, case log, using different time units. output metrics edeaR can visualized supplying plot function.","code":"patients %>%     idle_time(\"resource\", units = \"days\") ## # A tibble: 7 × 2 ##   employee idle_time     ##   <fct>    <drtn>        ## 1 r7       464.4199 days ## 2 r1       450.2124 days ## 3 r4       442.6260 days ## 4 r5       430.1764 days ## 5 r3       429.1064 days ## 6 r6       425.5362 days ## 7 r2       214.7436 days patients %>%     idle_time(\"resource\", units = \"days\") %>%     plot()"},{"path":"https://bupaverse.github.io/edeaR/articles/metrics.html","id":"processing-time","dir":"Articles","previous_headings":"Time perspective","what":"Processing Time","title":"Metrics","text":"processing time can computed levels log, trace, case, activity resource-activity. can calculated start end timestamps available activity instances.","code":"patients %>%      processing_time(\"activity\") %>%     plot"},{"path":"https://bupaverse.github.io/edeaR/articles/metrics.html","id":"throughput-time","dir":"Articles","previous_headings":"Time perspective","what":"Throughput Time","title":"Metrics","text":"throughput time time form first event last event case. levels can computed log, trace, case.","code":"patients %>%     throughput_time(\"log\") %>%     plot()"},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/articles/metrics.html","id":"resource-frequency","dir":"Articles","previous_headings":"Organizational Perspective","what":"Resource Frequency","title":"Metrics","text":"resource frequency metric allows computation number/frequency resources levels log, case, activity, resource, resource-activity.","code":"patients %>%     resource_frequency(\"resource\") ## # A tibble: 2,721 × 4 ##    employee handling_id absolute relative ##    <fct>    <chr>          <int>    <dbl> ##  1 r1       1                  2 0.000368 ##  2 r1       10                 2 0.000368 ##  3 r1       100                2 0.000368 ##  4 r1       101                2 0.000368 ##  5 r1       102                2 0.000368 ##  6 r1       103                2 0.000368 ##  7 r1       104                2 0.000368 ##  8 r1       105                2 0.000368 ##  9 r1       106                2 0.000368 ## 10 r1       107                2 0.000368 ## # … with 2,711 more rows ## # ℹ Use `print(n = ...)` to see more rows"},{"path":"https://bupaverse.github.io/edeaR/articles/metrics.html","id":"resource-involvement","dir":"Articles","previous_headings":"Organizational Perspective","what":"Resource Involvement","title":"Metrics","text":"Resource involvement refers notion number cases resource involved. can computed levels case, resource, resource-activity. example shows r1 r2 involved cases, r6 r7 involved cases, others involved half cases, less.","code":"patients %>%     resource_involvement(\"resource\") %>% plot"},{"path":"https://bupaverse.github.io/edeaR/articles/metrics.html","id":"resource-specialization","dir":"Articles","previous_headings":"Organizational Perspective","what":"Resource Specialization","title":"Metrics","text":"resource specalization metric shows whether resources specialized certain activities . can calculated levels log, case, resource activity. simple patients event log, resource performing exactly one activity, therefore 100% specialized.","code":"patients %>%     resource_specialisation(\"resource\") ## # A tibble: 7 × 4 ##   employee handling              absolute relative ##   <fct>    <fct>                    <int>    <dbl> ## 1 r1       Registration              1000    143.  ## 2 r2       Triage and Assessment     1000    143.  ## 3 r6       Discuss Results            990    141.  ## 4 r7       Check-out                  984    141.  ## 5 r5       X-Ray                      522     74.6 ## 6 r3       Blood test                 474     67.7 ## 7 r4       MRI SCAN                   472     67.4"},{"path":[]},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/articles/metrics.html","id":"activity-presence","dir":"Articles","previous_headings":"Structuredness > Variance","what":"Activity Presence","title":"Metrics","text":"Activity presence shows percentage cases activity present. level-argument.","code":"patients %>% activity_presence() %>%     plot"},{"path":"https://bupaverse.github.io/edeaR/articles/metrics.html","id":"activity-frequency","dir":"Articles","previous_headings":"Structuredness > Variance","what":"Activity Frequency","title":"Metrics","text":"frequency activities can calculated using activity_frequency function, levels log, trace activity.","code":"patients %>%     activity_frequency(\"activity\") ## # A tibble: 7 × 3 ##   handling              absolute relative ##   <fct>                    <int>    <dbl> ## 1 Registration               500   0.184  ## 2 Triage and Assessment      500   0.184  ## 3 Discuss Results            495   0.182  ## 4 Check-out                  492   0.181  ## 5 X-Ray                      261   0.0959 ## 6 Blood test                 237   0.0871 ## 7 MRI SCAN                   236   0.0867"},{"path":"https://bupaverse.github.io/edeaR/articles/metrics.html","id":"start-activities","dir":"Articles","previous_headings":"Structuredness > Variance","what":"Start Activities","title":"Metrics","text":"start cases can described using start_activities function. Available levels activity, case, log, resource resource activity. shows event log, cases started Registration resource r1.","code":"patients %>%     start_activities(\"resource-activity\") ## # A tibble: 1 × 5 ##   employee handling     absolute relative cum_sum ##   <fct>    <fct>           <int>    <dbl>   <dbl> ## 1 r1       Registration      500        1       1"},{"path":"https://bupaverse.github.io/edeaR/articles/metrics.html","id":"end-activities","dir":"Articles","previous_headings":"Structuredness > Variance","what":"End Activities","title":"Metrics","text":"Conversely, end_activities functions describes end cases, using levels: log, case, activity, resource resource-activity. contract start cases, end cases seems differ frequently, although mostly Check-activity.","code":"patients %>%     end_activities(\"resource-activity\") ## # A tibble: 5 × 5 ##   employee handling              absolute relative cum_sum ##   <fct>    <fct>                    <int>    <dbl>   <dbl> ## 1 r7       Check-out                  492    0.984   0.984 ## 2 r6       Discuss Results              3    0.006   0.99  ## 3 r2       Triage and Assessment        2    0.004   0.994 ## 4 r5       X-Ray                        2    0.004   0.998 ## 5 r3       Blood test                   1    0.002   1"},{"path":"https://bupaverse.github.io/edeaR/articles/metrics.html","id":"trace-coverage","dir":"Articles","previous_headings":"Structuredness > Variance","what":"Trace Coverage","title":"Metrics","text":"trace coverage metric shows relationship number different activity sequences (.e. traces) number cases cover.  patients log, 7 different traces, 2 cover nearly 100% event log.","code":"patients %>%     trace_coverage(\"trace\") %>%     plot()"},{"path":"https://bupaverse.github.io/edeaR/articles/metrics.html","id":"trace-length","dir":"Articles","previous_headings":"Structuredness > Variance","what":"Trace Length","title":"Metrics","text":"trace length metric describes length traces, .e. number activity instances case. can computed levels case, trace log.  can seen simple event log, cases trace length 5 6, minority trace length lower 5.","code":"patients %>%     trace_length(\"log\") %>%     plot"},{"path":"https://bupaverse.github.io/edeaR/articles/queue.html","id":"calculate-queueing-times","dir":"Articles","previous_headings":"","what":"Calculate queueing times","title":"Queue Analysis","text":"function calculate_queueing_times can used calculate activity instance log started, since queued. (, activity instance except first one case). example, sepsis event log result following: can use output compare times time queue different activities, example.  different resources:  remove “?” resource:","code":"library(eventdataR) calculate_queuing_times(sepsis) -> queuing_times queuing_times #> # A tibble: 14,164 × 7 #>    case_id activity      activ…¹ resou…² started             in_queue_since      #>    <chr>   <fct>         <chr>   <fct>   <dttm>              <dttm>              #>  1 XJ      ER Triage     3835    C       2013-11-07 08:29:18 2013-11-07 08:18:29 #>  2 XJ      ER Sepsis Tr… 3836    A       2013-11-07 08:37:32 2013-11-07 08:29:18 #>  3 XJ      CRP           3839    B       2013-11-07 08:51:00 2013-11-07 08:37:32 #>  4 XJ      LacticAcid    3837    B       2013-11-07 08:51:00 2013-11-07 08:51:00 #>  5 XJ      Leucocytes    3838    B       2013-11-07 08:51:00 2013-11-07 08:51:00 #>  6 XJ      IV Liquid     3840    A       2013-11-07 09:05:57 2013-11-07 08:51:00 #>  7 XJ      IV Antibioti… 3841    A       2013-11-07 10:05:58 2013-11-07 09:05:57 #>  8 XJ      Admission NC  3842    I       2013-11-07 11:11:34 2013-11-07 10:05:58 #>  9 XJ      Leucocytes    3843    B       2013-11-08 08:00:00 2013-11-07 11:11:34 #> 10 I       ER Triage     106     C       2013-11-09 09:34:28 2013-11-09 09:21:03 #> # … with 14,154 more rows, 1 more variable: time_in_queue <drtn>, and #> #   abbreviated variable names ¹​activity_instance_id, ²​resource #> # ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names library(ggplot2) #> Warning: package 'ggplot2' was built under R version 3.6.3 queuing_times %>%   ggplot(aes(activity, time_in_queue)) +   geom_boxplot() #> Don't know how to automatically pick scale for object of type difftime. Defaulting to continuous. queuing_times %>%   ggplot(aes(resource, time_in_queue)) +   geom_boxplot() #> Don't know how to automatically pick scale for object of type difftime. Defaulting to continuous. queuing_times %>%   filter(resource != \"?\") %>%   ggplot(aes(resource, time_in_queue)) +   geom_boxplot() #> Don't know how to automatically pick scale for object of type difftime. Defaulting to continuous."},{"path":"https://bupaverse.github.io/edeaR/articles/queue.html","id":"calculate-queue-length","dir":"Articles","previous_headings":"","what":"Calculate queue length","title":"Queue Analysis","text":"Based information queuing times, can also compute length queue. can done using function calculate_queue_length. , need decide time interval want compute length queue. example, can compute length queue day, week, month, etc. sepsis data covers approximately 1.5 years. Computing queue week thus give us 75 different observations. first observation data always first timestamp event recorded. point, queue always zero. second observation queue length one week, etc. can plot data see evolution queue time.  course, need careful interpreting extremes time range, complete cases. start time range, process “building ” activity, queue goes . end time range, last cases finished, queue gradually empties. takes knowledge data decide time frame proper analysis.","code":"queuing_times %>%   calculate_queuing_length(time_interval = \"week\") #> # A tibble: 83 × 2 #>    date       queue_length #>    <date>            <int> #>  1 2013-11-07            0 #>  2 2013-11-14            5 #>  3 2013-11-21           11 #>  4 2013-11-28           15 #>  5 2013-12-05           17 #>  6 2013-12-12           19 #>  7 2013-12-19           21 #>  8 2013-12-26           27 #>  9 2014-01-02           32 #> 10 2014-01-09           36 #> # … with 73 more rows #> # ℹ Use `print(n = ...)` to see more rows queuing_times %>%   calculate_queuing_length(time_interval = \"week\") %>%   ggplot(aes(date, queue_length)) +   geom_line()"},{"path":"https://bupaverse.github.io/edeaR/articles/queue.html","id":"by-resource-or-activity","dir":"Articles","previous_headings":"","what":"By resource or activity","title":"Queue Analysis","text":"length queue shown refers queued activity instances process. can also look queue length either activity resource. can done changing level argument calculation function. , can plotted conveniently (ignore unknown resource):","code":"queuing_times %>%   calculate_queuing_length(time_interval = \"week\", level = \"resource\")  #> # A tibble: 258 × 3 #>    date       resource queue_length #>    <date>     <fct>           <int> #>  1 2013-11-14 ?                   1 #>  2 2013-11-14 B                   3 #>  3 2013-11-14 E                   1 #>  4 2013-11-21 ?                   4 #>  5 2013-11-21 B                   6 #>  6 2013-11-21 E                   1 #>  7 2013-11-28 ?                   5 #>  8 2013-11-28 B                   6 #>  9 2013-11-28 E                   3 #> 10 2013-11-28 I                   1 #> # … with 248 more rows #> # ℹ Use `print(n = ...)` to see more rows queuing_times %>%   calculate_queuing_length(time_interval = \"week\", level = \"activity\")  #> # A tibble: 340 × 3 #>    date       activity     queue_length #>    <date>     <fct>               <int> #>  1 2013-11-14 CRP                     3 #>  2 2013-11-14 Release A               1 #>  3 2013-11-14 Return ER               1 #>  4 2013-11-21 CRP                     5 #>  5 2013-11-21 Leucocytes              1 #>  6 2013-11-21 Release A               1 #>  7 2013-11-21 Return ER               4 #>  8 2013-11-28 Admission NC            1 #>  9 2013-11-28 CRP                     5 #> 10 2013-11-28 Leucocytes              1 #> # … with 330 more rows #> # ℹ Use `print(n = ...)` to see more rows queuing_times %>%   filter(resource != \"?\") %>%   calculate_queuing_length(time_interval = \"week\", level = \"resource\") %>%   ggplot(aes(date, queue_length, color = resource)) +   geom_line()"},{"path":"https://bupaverse.github.io/edeaR/articles/queue.html","id":"the-impact-of-the-time-interval","dir":"Articles","previous_headings":"","what":"The impact of the time interval","title":"Queue Analysis","text":"increase time interval, queue length calculated longer periods time, data becomes sparse. example, calculating month instead week:  can set integer number indicate interval x days. example, every 3 days:  time interval chosen carefully. Note small interval (smallest possible “day”) can computationally expensive event log covers long time period.","code":"queuing_times %>%   filter(resource != \"?\") %>%   calculate_queuing_length(time_interval = \"month\", level = \"resource\") %>%   ggplot(aes(date, queue_length, color = resource)) +   geom_line() queuing_times %>%   filter(resource != \"?\") %>%   calculate_queuing_length(time_interval = 3, level = \"resource\") %>%   ggplot(aes(date, queue_length, color = resource)) +   geom_line()"},{"path":"https://bupaverse.github.io/edeaR/articles/queue.html","id":"some-important-remarks---caution-needed","dir":"Articles","previous_headings":"","what":"Some important remarks - caution needed!","title":"Queue Analysis","text":"calculations queues based assumptions important understand drawing conclusions numbers. Firstly, starts log, nothing . take process model notion account. assume activity instance started previous one finished. However, activity question previous one can executed parallel, activity question started earlier, thus underestimate time queue. Relatedly, activity question actually overlaps previous one, get negative queue time, following theory, started early. (course, can happen start end events). current implemention notify happens, check result queueing times, decide handle (e.g. remove zero NA). Secondly, might factors, present data, impact something starts queue . somewhere two activities decision made proceed case, queueing second activity didn’t really start first, decision made. Finally, important remark made regarding resource. compute queue length resource, shown , activities resouces executed added queue previous activity instance finished. might accurately represent reality, assume executions assigned resource queue -front, .e. enabled (taking account previous two points heuristic use define moment), latter stage. might instance situation queued cases added queue necessarily tied single resource, resources can pick task free start (point time task added list, task started). reasons, caution necessary analysing queuing times length, heuristic, solely based avaiable process data take account process/workflow context task assignment.","code":""},{"path":"https://bupaverse.github.io/edeaR/articles/work_schedules.html","id":"creating-a-working-schedule","dir":"Articles","previous_headings":"","what":"Creating a working schedule","title":"Performance with work schedules","text":"default work schedule can created using function create_working_schedule generate weekly working hours schedule, defaulting 9 5 workdays. can change day schedule using arguments start_time /end_time. following code generate work schedule workdays 8.30am 4pm. work schedule created, can also change individal days. example, suppose Friday office closes 1pm, can changed follows. Note days numbered starting monday. Next working times, work schedule also contains information holidays. Three different types distinguished: fixed holidays: holidays take place date year, Christmas, New Year’s Day, etc. floating holidays: holidays take place different date year, Easter, Thanksgiving. holiday periods: additional periods can define, instance, organisation closed summer holidays. holidays excluded calculation throughput processing time. default, create_working_schedule function creates two fixed holidays: Christmas New Year’s day. Let’s add holidays. Another fixed holiday can typically add, national holidays. Belgium, 21st July. typical floating holiday Easter. However, Easter falls Sunday, already taking account. Nonetheless, let us add Easter Monday schedule. floating holidays, important add dates relevant data, , years data. Suppose using patients dataset. stretched 2017 2018, need add Easter Monday years, 2017-04-17 2018-04-02. Finally, let us assume don’t work period Christmas New year 2017. can add holiday period December 26th till December 31st. Note doesn’t make much sense use working schedule patients data, work healthcare environment doesn’t obey working hours. sake illustration, patients data includes start complete events, let’s continue. Let’s save work schedule ws.","code":"library(edeaR) create_work_schedule() ## Week schedule ## # A tibble: 7 × 3 ##     day start_time end_time ##   <int> <time>     <time>   ## 1     1 09:00      17:00    ## 2     2 09:00      17:00    ## 3     3 09:00      17:00    ## 4     4 09:00      17:00    ## 5     5 09:00      17:00    ## 6     6    NA         NA    ## 7     7    NA         NA    ##  ## Fixed holidays ## # A tibble: 2 × 3 ##   month   day name           ##   <dbl> <dbl> <chr>          ## 1     1     1 New Year's Day ## 2    12    25 Christmas      ##  ## Floating holidays ## # A tibble: 0 × 2 ## # … with 2 variables: date <date>, name <chr> ## # ℹ Use `colnames()` to see all variable names ##  ## Holiday periods ## # A tibble: 0 × 2 ## # … with 2 variables: from <date>, to <date> ## # ℹ Use `colnames()` to see all variable names create_work_schedule(start_time = \"08:30:00\", end_time = \"16:00:00\") ## Week schedule ## # A tibble: 7 × 3 ##     day start_time end_time ##   <int> <time>     <time>   ## 1     1 08:30      16:00    ## 2     2 08:30      16:00    ## 3     3 08:30      16:00    ## 4     4 08:30      16:00    ## 5     5 08:30      16:00    ## 6     6    NA         NA    ## 7     7    NA         NA    ##  ## Fixed holidays ## # A tibble: 2 × 3 ##   month   day name           ##   <dbl> <dbl> <chr>          ## 1     1     1 New Year's Day ## 2    12    25 Christmas      ##  ## Floating holidays ## # A tibble: 0 × 2 ## # … with 2 variables: date <date>, name <chr> ## # ℹ Use `colnames()` to see all variable names ##  ## Holiday periods ## # A tibble: 0 × 2 ## # … with 2 variables: from <date>, to <date> ## # ℹ Use `colnames()` to see all variable names create_work_schedule(start_time = \"08:30:00\", end_time = \"16:00:00\") %>%     change_day(5, start_time = \"08:30:00\", end_time = \"13:00:00\") ## Week schedule ## # A tibble: 7 × 3 ##     day start_time end_time ##   <int> <time>     <time>   ## 1     1 08:30      16:00    ## 2     2 08:30      16:00    ## 3     3 08:30      16:00    ## 4     4 08:30      16:00    ## 5     5 08:30      13:00    ## 6     6    NA         NA    ## 7     7    NA         NA    ##  ## Fixed holidays ## # A tibble: 2 × 3 ##   month   day name           ##   <dbl> <dbl> <chr>          ## 1     1     1 New Year's Day ## 2    12    25 Christmas      ##  ## Floating holidays ## # A tibble: 0 × 2 ## # … with 2 variables: date <date>, name <chr> ## # ℹ Use `colnames()` to see all variable names ##  ## Holiday periods ## # A tibble: 0 × 2 ## # … with 2 variables: from <date>, to <date> ## # ℹ Use `colnames()` to see all variable names create_work_schedule(start_time = \"08:30:00\", end_time = \"16:00:00\") %>%     change_day(5, start_time = \"08:30:00\", end_time = \"13:00:00\") %>%     add_fixed_holiday(\"Belgian National Holiday\", 07, 21) ## Week schedule ## # A tibble: 7 × 3 ##     day start_time end_time ##   <int> <time>     <time>   ## 1     1 08:30      16:00    ## 2     2 08:30      16:00    ## 3     3 08:30      16:00    ## 4     4 08:30      16:00    ## 5     5 08:30      13:00    ## 6     6    NA         NA    ## 7     7    NA         NA    ##  ## Fixed holidays ## # A tibble: 3 × 3 ##   month   day name                     ##   <dbl> <dbl> <chr>                    ## 1     1     1 New Year's Day           ## 2    12    25 Christmas                ## 3     7    21 Belgian National Holiday ##  ## Floating holidays ## # A tibble: 0 × 2 ## # … with 2 variables: date <date>, name <chr> ## # ℹ Use `colnames()` to see all variable names ##  ## Holiday periods ## # A tibble: 0 × 2 ## # … with 2 variables: from <date>, to <date> ## # ℹ Use `colnames()` to see all variable names library(lubridate) ##  ## Attaching package: 'lubridate' ## The following objects are masked from 'package:base': ##  ##     date, intersect, setdiff, union create_work_schedule(start_time = \"08:30:00\", end_time = \"16:00:00\") %>%     change_day(5, start_time = \"08:30:00\", end_time = \"13:00:00\") %>%     add_fixed_holiday(\"Belgian National Holiday\", 07, 21) %>%     add_floating_holiday(\"Easter Monday\", ymd(c(20170417, 20180402))) ## Week schedule ## # A tibble: 7 × 3 ##     day start_time end_time ##   <int> <time>     <time>   ## 1     1 08:30      16:00    ## 2     2 08:30      16:00    ## 3     3 08:30      16:00    ## 4     4 08:30      16:00    ## 5     5 08:30      13:00    ## 6     6    NA         NA    ## 7     7    NA         NA    ##  ## Fixed holidays ## # A tibble: 3 × 3 ##   month   day name                     ##   <dbl> <dbl> <chr>                    ## 1     1     1 New Year's Day           ## 2    12    25 Christmas                ## 3     7    21 Belgian National Holiday ##  ## Floating holidays ## # A tibble: 2 × 2 ##   date       name          ##   <date>     <chr>         ## 1 2017-04-17 Easter Monday ## 2 2018-04-02 Easter Monday ##  ## Holiday periods ## # A tibble: 0 × 2 ## # … with 2 variables: from <date>, to <date> ## # ℹ Use `colnames()` to see all variable names library(lubridate) create_work_schedule(start_time = \"08:30:00\", end_time = \"16:00:00\") %>%     change_day(5, start_time = \"08:30:00\", end_time = \"13:00:00\") %>%     add_fixed_holiday(\"Belgian National Holiday\", month =  07, day = 21) %>%     add_floating_holiday(\"Easter Monday\", dates = ymd(c(20170417, 20180402))) %>%     add_holiday_periods(from = ymd(20171226), to = ymd(20171231)) ## Week schedule ## # A tibble: 7 × 3 ##     day start_time end_time ##   <int> <time>     <time>   ## 1     1 08:30      16:00    ## 2     2 08:30      16:00    ## 3     3 08:30      16:00    ## 4     4 08:30      16:00    ## 5     5 08:30      13:00    ## 6     6    NA         NA    ## 7     7    NA         NA    ##  ## Fixed holidays ## # A tibble: 3 × 3 ##   month   day name                     ##   <dbl> <dbl> <chr>                    ## 1     1     1 New Year's Day           ## 2    12    25 Christmas                ## 3     7    21 Belgian National Holiday ##  ## Floating holidays ## # A tibble: 2 × 2 ##   date       name          ##   <date>     <chr>         ## 1 2017-04-17 Easter Monday ## 2 2018-04-02 Easter Monday ##  ## Holiday periods ## # A tibble: 1 × 2 ##   from       to         ##   <date>     <date>     ## 1 2017-12-26 2017-12-31 ws <- create_work_schedule(start_time = \"08:30:00\", end_time = \"16:00:00\") %>%     change_day(5, start_time = \"08:30:00\", end_time = \"13:00:00\") %>%     add_fixed_holiday(\"Belgian National Holiday\", month =  07, day = 21) %>%     add_floating_holiday(\"Easter Monday\", dates = ymd(c(20170417, 20180402))) %>%     add_holiday_periods(from = ymd(20171226), to = ymd(20171231))"},{"path":"https://bupaverse.github.io/edeaR/articles/work_schedules.html","id":"calculating-performance","dir":"Articles","previous_headings":"","what":"Calculating performance","title":"Performance with work schedules","text":"can now plug working schedule processing throughput time calculation. example, throughput time normally computed follows. order take account working schedule another example, consider processing time activity. Without taking account working hours: working hours:","code":"library(eventdataR) patients %>% throughput_time() ## # A tibble: 1 × 8 ##     min    q1 median  mean    q3   max st_dev   iqr ##   <dbl> <dbl>  <dbl> <dbl> <dbl> <dbl>  <dbl> <dbl> ## 1  1.50  4.31   6.09  6.68  8.59  23.1   3.22  4.27 patients %>% throughput_time(work_schedule = ws) ## # A tibble: 1 × 8 ##     min    q1 median    mean     q3    max st_dev   iqr ##   <dbl> <dbl>  <dbl>   <dbl>  <dbl>  <dbl>  <dbl> <dbl> ## 1     0 70200 108000 115625. 151200 426600 59688. 81000 patients %>%     processing_time(level = \"activity\") ## # A tibble: 7 × 11 ##   handling       min   q1    mean  median q3    max   st_dev   iqr total relat…¹ ##   <fct>          <drt> <drt> <drt> <drtn> <drt> <drt>  <dbl> <dbl> <drt>   <dbl> ## 1 Registration    49.… 124.… 165.… 162.8… 204.…  338…   57.2  79.9  826…  0.184  ## 2 Triage and As… 352.… 681.… 786.… 800.4… 901.… 1128…  166.  221.  3931…  0.184  ## 3 Discuss Resul…  80.… 138.… 166.… 166.3… 193.…  272…   37.7  54.4  824…  0.182  ## 4 Check-out       40.…  96.… 123.… 124.3… 148.…  233…   37.2  51.6  608…  0.181  ## 5 X-Ray          137.… 233.… 290.… 287.5… 338.…  490…   76.9 106.   758…  0.0959 ## 6 Blood test     185.… 285.… 332.… 328.1… 376.…  488…   63.6  90.7  787…  0.0871 ## 7 MRI SCAN       149.… 216.… 248.… 245.4… 281.…  355…   44.1  65.4  587…  0.0867 ## # … with abbreviated variable name ¹​relative_frequency patients %>%     processing_time(level = \"activity\", work_schedule = ws) ## # A tibble: 7 × 11 ##   handling     min    q1   mean median     q3   max st_dev    iqr  total relat…¹ ##   <fct>      <dbl> <dbl>  <dbl>  <dbl>  <dbl> <dbl>  <dbl>  <dbl>  <dbl>   <dbl> ## 1 Registrat…     0     0  2810.     0   2262  27000  6162.  2262  1.40e6  0.184  ## 2 Triage an…     0     0 16167. 18338. 27000  27000 11621. 27000  8.08e6  0.184  ## 3 Discuss R…     0     0  3552.     0   5652. 27000  6557.  5652. 1.76e6  0.182  ## 4 Check-out      0     0  2703.     0   3382  27000  5977.  3382  1.33e6  0.181  ## 5 X-Ray          0     0  7090.  1072  13736  27000  9274. 13736  1.85e6  0.0959 ## 6 Blood test     0     0  7327.    65  16200  27000  9508. 16200  1.74e6  0.0871 ## 7 MRI SCAN       0     0  6002.     0  11144  27000  8904. 11144  1.42e6  0.0867 ## # … with abbreviated variable name ¹​relative_frequency"},{"path":"https://bupaverse.github.io/edeaR/articles/work_schedules.html","id":"caution","dir":"Articles","previous_headings":"","what":"Caution","title":"Performance with work schedules","text":"caution required using work schedules calculations. case falls completely holiday period, weekend, receive throughput time zero. goes activities take place outside working hours, computing processing time. activity starts 7am completed 10am. working schedule 9--5 workdays, activity processing time 1 hour. completed anytime 9am, zero! , using working schedule overestimate performance lot activities doesn’t adhere working schedule. moment, performance functions notify case. Make sure use working schedule recorded events fall inside working schedule time.","code":""},{"path":"https://bupaverse.github.io/edeaR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gert Janssenswillen. Author, maintainer. Marijke Swennen. Contributor.","code":""},{"path":"https://bupaverse.github.io/edeaR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Janssenswillen G (2022). edeaR: Exploratory Descriptive Event-Based Data Analysis. https://bupar.net/, https://github.com/bupaverse/edeaR/, https://bupaverse.github.io/edeaR/.","code":"@Manual{,   title = {edeaR: Exploratory and Descriptive Event-Based Data Analysis},   author = {Gert Janssenswillen},   year = {2022},   note = {https://bupar.net/, https://github.com/bupaverse/edeaR/, https://bupaverse.github.io/edeaR/}, }"},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/index.html","id":"r-package-for-exploratory-and-descriptive-event-data-analysis","dir":"","previous_headings":"","what":"R-package for exploratory and descriptive event data analysis.","title":"Exploratory and Descriptive Event-Based Data Analysis","text":"package provides several useful techniques Exploratory Descriptive analysis event based data R, developed Business Informatics Research Group Hasselt University","code":""},{"path":"https://bupaverse.github.io/edeaR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Exploratory and Descriptive Event-Based Data Analysis","text":"Version 0.9.0 package can installed CRAN: information, check manual github check http://www.bupar.net","code":"install.packages(\"edeaR\")"},{"path":"https://bupaverse.github.io/edeaR/reference/activity_frequency.html","id":null,"dir":"Reference","previous_headings":"","what":"Activity Frequency — activity_frequency","title":"Activity Frequency — activity_frequency","text":"Provides summary statistics frequency activity types level log, traces, cases, activity types.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/activity_frequency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Activity Frequency — activity_frequency","text":"","code":"activity_frequency(   log,   level = c(\"log\", \"trace\", \"activity\", \"case\"),   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )  # S3 method for eventlog activity_frequency(   log,   level = c(\"log\", \"trace\", \"activity\", \"case\"),   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )  # S3 method for grouped_eventlog activity_frequency(   log,   level = c(\"log\", \"trace\", \"activity\", \"case\"),   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )  # S3 method for activitylog activity_frequency(   log,   level = c(\"log\", \"trace\", \"activity\", \"case\"),   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )  # S3 method for grouped_activitylog activity_frequency(   log,   level = c(\"log\", \"trace\", \"activity\", \"case\"),   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )"},{"path":"https://bupaverse.github.io/edeaR/reference/activity_frequency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Activity Frequency — activity_frequency","text":"log log: Object class log derivatives (grouped_log, eventlog, activitylog, etc.). level character (default \"log\"): Level granularity analysis: \"log\" (default), \"trace\", \"case\", \"activity\". information, see vignette(\"metrics\", \"edeaR\") 'Details' . append logical (default FALSE) : arguments append append_column deprecated favour augment. Indicating whether append results original log. Ignored level \"log\" \"trace\". append_column arguments append append_column deprecated favour augment. output columns append log, append = TRUE. Default column depends chosen level. sort logical (default TRUE): Sort output count. levels frequency count output. eventlog ; please use log instead.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/activity_frequency.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Activity Frequency — activity_frequency","text":"Argument level following options: log level, metric shows summary statistics frequency activities throughout complete log. case level, metric shows absolute relative number times different activity types occur case. absolute number shows number distinct activity types occur cases. relative number calculated based total activity executions case. trace level, metric presents absolute relative number times specific activity type occurs trace. activity level, metric provides absolute relative frequency specific activity complete log.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/activity_frequency.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Activity Frequency — activity_frequency","text":"activity_frequency(eventlog): Computes activity frequency eventlog. activity_frequency(grouped_eventlog): Computes activity frequency grouped_eventlog. activity_frequency(activitylog): Computes activity frequency activitylog. activity_frequency(grouped_activitylog): Computes activity frequency grouped_activitylog.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/activity_frequency.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Activity Frequency — activity_frequency","text":"Swennen, M. (2018). Using Event Log Knowledge Support Operational Exellence Techniques (Doctoral dissertation). Hasselt University.","code":""},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/reference/activity_presence.html","id":null,"dir":"Reference","previous_headings":"","what":"Metric: Activity Presence — activity_presence","title":"Metric: Activity Presence — activity_presence","text":"Calculates activity type percentage cases present.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/activity_presence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metric: Activity Presence — activity_presence","text":"","code":"activity_presence(   log,   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )  # S3 method for eventlog activity_presence(   log,   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )  # S3 method for grouped_eventlog activity_presence(   log,   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )  # S3 method for activitylog activity_presence(   log,   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )  # S3 method for grouped_activitylog activity_presence(   log,   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )"},{"path":"https://bupaverse.github.io/edeaR/reference/activity_presence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metric: Activity Presence — activity_presence","text":"log log: Object class log derivatives (grouped_log, eventlog, activitylog, etc.). append logical (default FALSE) : arguments append append_column deprecated favour augment. Indicating whether append results original log. Ignored level \"log\" \"trace\". append_column arguments append append_column deprecated favour augment. output columns append log, append = TRUE. Default column depends chosen level. sort logical (default TRUE): Sort output count. levels frequency count output. eventlog ; please use log instead.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/activity_presence.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Metric: Activity Presence — activity_presence","text":"indication variance can presence activities different cases. metric shows activity absolute number cases activity occurs together relative presence.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/activity_presence.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Metric: Activity Presence — activity_presence","text":"activity_presence(eventlog): Compute activity presence eventlog. activity_presence(grouped_eventlog): Compute activity presence grouped_eventlog. activity_presence(activitylog): Compute activity presence activitylog. activity_presence(grouped_activitylog): Compute activity presence grouped_activitylog.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/activity_presence.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Metric: Activity Presence — activity_presence","text":"Swennen, M. (2018). Using Event Log Knowledge Support Operational Exellence Techniques (Doctoral dissertation). Hasselt University.","code":""},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/reference/activity_presence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metric: Activity Presence — activity_presence","text":"","code":"if (FALSE) { data <- data.frame(case = rep(\"A\",5), activity_id = c(\"A\",\"B\",\"C\",\"D\",\"E\"), activity_instance_id = 1:5, lifecycle_id = rep(\"complete\",5), timestamp = 1:5, resource = rep(\"resource 1\", 5))  log <- bupaR::eventlog(data,case_id = \"case\", activity_id = \"activity_id\", activity_instance_id = \"activity_instance_id\", lifecycle_id = \"lifecycle_id\", timestamp = \"timestamp\", resource_id = \"resource\")  activity_presence(log) }"},{"path":"https://bupaverse.github.io/edeaR/reference/add_fixed_holiday.html","id":null,"dir":"Reference","previous_headings":"","what":"Add fixed holiday to work schedule — add_fixed_holiday","title":"Add fixed holiday to work schedule — add_fixed_holiday","text":"Add fixed holiday work schedule","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/add_fixed_holiday.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add fixed holiday to work schedule — add_fixed_holiday","text":"","code":"add_fixed_holiday(work_schedule, name, month, day)"},{"path":"https://bupaverse.github.io/edeaR/reference/add_fixed_holiday.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add fixed holiday to work schedule — add_fixed_holiday","text":"work_schedule Work schedule created create_work_schedule name Name holiday month Month fixed holiday takes place day Day fixed holiday","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/add_floating_holiday.html","id":null,"dir":"Reference","previous_headings":"","what":"Add floating holiday to work schedule — add_floating_holiday","title":"Add floating holiday to work schedule — add_floating_holiday","text":"Add floating holiday work schedule","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/add_floating_holiday.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add floating holiday to work schedule — add_floating_holiday","text":"","code":"add_floating_holiday(work_schedule, name, dates)"},{"path":"https://bupaverse.github.io/edeaR/reference/add_floating_holiday.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add floating holiday to work schedule — add_floating_holiday","text":"work_schedule Work schedule created create_work_schedule name Name holiday dates Dates floating holiday. Make sure list dates relevant time frame","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/add_holiday_periods.html","id":null,"dir":"Reference","previous_headings":"","what":"Add holiday period to work schedule — add_holiday_periods","title":"Add holiday period to work schedule — add_holiday_periods","text":"Add holiday period work schedule","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/add_holiday_periods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add holiday period to work schedule — add_holiday_periods","text":"","code":"add_holiday_periods(work_schedule, from, to)"},{"path":"https://bupaverse.github.io/edeaR/reference/add_holiday_periods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add holiday period to work schedule — add_holiday_periods","text":"work_schedule Work schedule created create_work_schedule Start holiday period (included) End holiday period (included)","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/augment.html","id":null,"dir":"Reference","previous_headings":"","what":"Augment Log — augment","title":"Augment Log — augment","text":"Augment log results metric computation.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/augment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Augment Log — augment","text":"","code":"augment(metric, log, columns, prefix = \"\")  # S3 method for log_metric augment(metric, log, columns, prefix = \"\")  # S3 method for case_metric augment(metric, log, columns, prefix = \"\")  # S3 method for activity_metric augment(metric, log, columns, prefix = \"\")  # S3 method for resource_metric augment(metric, log, columns, prefix = \"\")  # S3 method for resource_activity_metric augment(metric, log, columns, prefix = \"\")  # S3 method for trace_metric augment(metric, log, columns, prefix = \"\")"},{"path":"https://bupaverse.github.io/edeaR/reference/augment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Augment Log — augment","text":"metric Metric computed edeaR log log: Object class log derivatives (grouped_log, eventlog, activitylog, etc.) used compute metric. columns character vector: Column names metric want add log. missing, defaults columns. prefix character: Prefix added newly added metric columns log.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/augment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Augment Log — augment","text":"Object class log derivatives (grouped_log, eventlog, activitylog, etc.). class log input.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/augment.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Augment Log — augment","text":"augment(log_metric): Augment log metric augment(case_metric): Augment case metric augment(activity_metric): Augment activity metric augment(resource_metric): Augment resource metric augment(resource_activity_metric): Augment resource-activity metric augment(trace_metric): Augment trace metric","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/augment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Augment Log — augment","text":"","code":"if (FALSE) { sepsis %>%   throughput_time(\"case\") %>%   augment(sepsis) }"},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/reference/calculate_queuing_length.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate queuing length — calculate_queuing_length","text":"","code":"calculate_queuing_length(   queueing_times,   level = c(\"log\", \"activity\", \"resource\"),   time_interval )"},{"path":"https://bupaverse.github.io/edeaR/reference/calculate_queuing_length.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate queuing length — calculate_queuing_length","text":"queueing_times Object class queuing_times, returned calculate_queuing_times. level character (default \"log\"): Level granularity analysis: \"log\", \"activity\", \"resource\". information, see 'Details' . time_interval time interval queue length calculated. information, see 'Details' argument seq.Date.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/calculate_queuing_length.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate queuing length — calculate_queuing_length","text":"Argument level following options: log level, metric calculates total number activity instances queued given moment time. resource level, metric calculates total number activity instances queued given resource. activity level, metric calculates total number activity instances queue given activity type. Argument time_interval following options (see also argument seq.Date): numeric number days. object class difftime. character string, one \"day\", \"week\", \"month\", \"quarter\", \"year\". first day queue length calculated, first timestamp found log.","code":""},{"path":[]},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/reference/calculate_queuing_times.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate queuing times — calculate_queuing_times","text":"","code":"calculate_queuing_times(   log,   units = c(\"auto\", \"secs\", \"mins\", \"hours\", \"days\", \"weeks\"),   eventlog = deprecated() )  # S3 method for eventlog calculate_queuing_times(   log,   units = c(\"auto\", \"secs\", \"mins\", \"hours\", \"days\", \"weeks\"),   eventlog = deprecated() )  # S3 method for activitylog calculate_queuing_times(   log,   units = c(\"auto\", \"secs\", \"mins\", \"hours\", \"days\", \"weeks\"),   eventlog = deprecated() )"},{"path":"https://bupaverse.github.io/edeaR/reference/calculate_queuing_times.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate queuing times — calculate_queuing_times","text":"log log: Object class log derivatives (grouped_log, eventlog, activitylog, etc.). units character (default \"auto\"): time unit throughput times reported. one following values: \"auto\" (default), \"secs\", \"mins\", \"hours\", \"days\", \"weeks\". See also units argument difftime. eventlog ; please use log instead.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/calculate_queuing_times.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate queuing times — calculate_queuing_times","text":"Returns list activity instances, time started, time since queued. Notice take account process model notion! time since queued completion time previous activity log.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/calculate_queuing_times.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Calculate queuing times — calculate_queuing_times","text":"calculate_queuing_times(eventlog): Calculate queueing times eventlog grouped_eventlog. calculate_queuing_times(activitylog): Calculate queueing times activitylog grouped_activitylog.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/calculate_queuing_times.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate queuing times — calculate_queuing_times","text":"Swennen, M. (2018). Using Event Log Knowledge Support Operational Exellence Techniques (Doctoral dissertation). Hasselt University.","code":""},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/reference/change_day.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust days in work schedule — change_day","title":"Adjust days in work schedule — change_day","text":"Adjust days work schedule","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/change_day.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust days in work schedule — change_day","text":"","code":"change_day(work_schedule, day, start_time, end_time)"},{"path":"https://bupaverse.github.io/edeaR/reference/change_day.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust days in work schedule — change_day","text":"work_schedule Work schedule created create_work_schedule day numeric vector containing days changed. 1 = monday. start_time new start time selected days (hh:mm:ss) end_time new end time selected days (hh:mm:ss)","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/create_work_schedule.html","id":null,"dir":"Reference","previous_headings":"","what":"Create work schedule — create_work_schedule","title":"Create work schedule — create_work_schedule","text":"Create work schedule","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/create_work_schedule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create work schedule — create_work_schedule","text":"","code":"create_work_schedule(start_time = \"9:00:00\", end_time = \"17:00:00\")"},{"path":"https://bupaverse.github.io/edeaR/reference/create_work_schedule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create work schedule — create_work_schedule","text":"start_time Character indicating usual start time workdays (hh:mm:ss) end_time Character indicating usual end time workdays (hh:mm:ss)","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/edeaR.html","id":null,"dir":"Reference","previous_headings":"","what":"edeaR - Exploratory and Descriptive Event-based data Analysis in R — edeaR","title":"edeaR - Exploratory and Descriptive Event-based data Analysis in R — edeaR","text":"package provides several useful techniques Exploratory Descriptive analysis event based data R, developed Business Informatics Research Group Hasselt University.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/end_activities.html","id":null,"dir":"Reference","previous_headings":"","what":"End activities — end_activities","title":"End activities — end_activities","text":"Analyse end activities process.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/end_activities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"End activities — end_activities","text":"","code":"end_activities(   log,   level = c(\"log\", \"case\", \"activity\", \"resource\", \"resource-activity\"),   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )  # S3 method for eventlog end_activities(   log,   level = c(\"log\", \"case\", \"activity\", \"resource\", \"resource-activity\"),   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )  # S3 method for grouped_eventlog end_activities(   log,   level = c(\"log\", \"case\", \"activity\", \"resource\", \"resource-activity\"),   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )  # S3 method for activitylog end_activities(   log,   level = c(\"log\", \"case\", \"activity\", \"resource\", \"resource-activity\"),   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )  # S3 method for grouped_activitylog end_activities(   log,   level = c(\"log\", \"case\", \"activity\", \"resource\", \"resource-activity\"),   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )"},{"path":"https://bupaverse.github.io/edeaR/reference/end_activities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"End activities — end_activities","text":"log log: Object class log derivatives (grouped_log, eventlog, activitylog, etc.). level character (default \"log\"): Level granularity analysis: \"log\" (default), \"case\", \"activity\", \"resource\", \"resource-activity\". information, see vignette(\"metrics\", \"edeaR\") 'Details' . append logical (default FALSE) : arguments append append_column deprecated favour augment. Indicating whether append results original log. Ignored level \"log\" \"trace\". append_column arguments append append_column deprecated favour augment. output columns append log, append = TRUE. Default column depends chosen level. sort logical (default TRUE): Sort output count. levels frequency count output. eventlog ; please use log instead.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/end_activities.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"End activities — end_activities","text":"Argument level following options: log level, metric shows absolute relative number activities last activity one cases. case level, metric provides overview end activity case. activity level, metric calculates activity absolute relative number cases end activity type. Similar start_activities metric, relative number calculated portion number cases, number \"opportunities\" activity end activity. cumulative sum added insight number activities required cover certain part total. resource level, overview resources execute last activity per case provided. resource-activity level, metric shows occurring resource-activity combination absolute relative number times resource executes activity end activity case.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/end_activities.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"End activities — end_activities","text":"end_activities(eventlog): Computes end activities eventlog. end_activities(grouped_eventlog): Computes end activities grouped_eventlog. end_activities(activitylog): Computes end activities activitylog. end_activities(grouped_activitylog): Computes end activities grouped_activitylog.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/end_activities.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"End activities — end_activities","text":"Swennen, M. (2018). Using Event Log Knowledge Support Operational Exellence Techniques (Doctoral dissertation). Hasselt University.","code":""},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/reference/filter_activity.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Activity — filter_activity","title":"Filter Activity — filter_activity","text":"Filters log based activities","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_activity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Activity — filter_activity","text":"","code":"filter_activity(log, activities, reverse = FALSE, eventlog = deprecated())  # S3 method for log filter_activity(log, activities, reverse = FALSE, eventlog = deprecated())  # S3 method for grouped_log filter_activity(log, activities, reverse = FALSE, eventlog = deprecated())  ifilter_activity(eventlog)"},{"path":"https://bupaverse.github.io/edeaR/reference/filter_activity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Activity — filter_activity","text":"log log: Object class log derivatives (grouped_log, eventlog, activitylog, etc.). activities character vector: Containing one activity identifiers. reverse logical (default FALSE): Indicating whether selection reversed. eventlog ; please use log instead.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_activity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Activity — filter_activity","text":"given object type log, return filtered log. given object type grouped_log, filter applied stratified way (.e. separately group). returned log grouped variables original log.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_activity.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Filter Activity — filter_activity","text":"filter_activity(log): Filters activities log. filter_activity(grouped_log): Filters activities grouped_log.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_activity.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Filter Activity — filter_activity","text":"Swennen, M. (2018). Using Event Log Knowledge Support Operational Exellence Techniques (Doctoral dissertation). Hasselt University.","code":""},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/reference/filter_activity_frequency.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Activity Frequency — filter_activity_frequency","title":"Filter Activity Frequency — filter_activity_frequency","text":"Filters log based frequency activities.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_activity_frequency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Activity Frequency — filter_activity_frequency","text":"","code":"filter_activity_frequency(   log,   interval = NULL,   percentage = NULL,   reverse = FALSE,   eventlog = deprecated() )  # S3 method for log filter_activity_frequency(   log,   interval = NULL,   percentage = NULL,   reverse = FALSE,   eventlog = deprecated() )  # S3 method for grouped_log filter_activity_frequency(   log,   interval = NULL,   percentage = NULL,   reverse = FALSE,   eventlog = deprecated() )  ifilter_activity_frequency(eventlog)"},{"path":"https://bupaverse.github.io/edeaR/reference/filter_activity_frequency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Activity Frequency — filter_activity_frequency","text":"log log: Object class log derivatives (grouped_log, eventlog, activitylog, etc.). percentage, interval target coverage activity instances. Provide either percentage interval.percentage (numeric): percentile p return common activity types log, account least p% activity instances.interval (numeric vector length 2): activity frequency interval. Half open interval can created using NA. information, see 'Details' . reverse logical (default FALSE): Indicating whether selection reversed. eventlog ; please use log instead.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_activity_frequency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Activity Frequency — filter_activity_frequency","text":"given object type log, return filtered log. given object type grouped_log, filter applied stratified way (.e. separately group). returned log grouped variables original log.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_activity_frequency.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter Activity Frequency — filter_activity_frequency","text":"Filtering log based activity frequency can done two ways: using interval allowed frequencies, specify coverage percentage: percentage: filtering using percentage p%, filter return p% activity instances, starting activity labels highest frequency. filter retain additional activity labels long number activity instances exceed percentage threshold. interval: filtering using interval, activity labels retained absolute frequency fall interval. interval specified using numeric vector length 2. Half open intervals can created using NA, e.g., c(10, NA) select activity labels occur 10 times .","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_activity_frequency.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Filter Activity Frequency — filter_activity_frequency","text":"filter_activity_frequency(log): Filters activities log. filter_activity_frequency(grouped_log): Filters activities grouped_log.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_activity_frequency.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Filter Activity Frequency — filter_activity_frequency","text":"Swennen, M. (2018). Using Event Log Knowledge Support Operational Exellence Techniques (Doctoral dissertation). Hasselt University.","code":""},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/reference/filter_activity_instance.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Activity Instance — filter_activity_instance","title":"Filter Activity Instance — filter_activity_instance","text":"Filters log based activity instance identifier. method activity_instances argument, vector identifiers can given. selection can negated reverse argument.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_activity_instance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Activity Instance — filter_activity_instance","text":"","code":"filter_activity_instance(   log,   activity_instances,   reverse = FALSE,   eventlog = deprecated() )  # S3 method for eventlog filter_activity_instance(   log,   activity_instances,   reverse = FALSE,   eventlog = deprecated() )  # S3 method for grouped_eventlog filter_activity_instance(   log,   activity_instances,   reverse = FALSE,   eventlog = deprecated() )  ifilter_activity_instance(eventlog)"},{"path":"https://bupaverse.github.io/edeaR/reference/filter_activity_instance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Activity Instance — filter_activity_instance","text":"log eventlog: Object class eventlog derivatives (grouped_eventlog). activity_instances vector activity instance identifiers. reverse logical (default FALSE): Indicating whether selection reversed. eventlog ; please use log instead.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_activity_instance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Activity Instance — filter_activity_instance","text":"given object type log, return filtered log. given object type grouped_log, filter applied stratified way (.e. separately group). returned log grouped variables original log.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_activity_instance.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Filter Activity Instance — filter_activity_instance","text":"filter_activity_instance(eventlog): Filters activities eventlog. filter_activity_instance(grouped_eventlog): Filters activities grouped_eventlog.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_activity_instance.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Filter Activity Instance — filter_activity_instance","text":"Swennen, M. (2018). Using Event Log Knowledge Support Operational Exellence Techniques (Doctoral dissertation). Hasselt University.","code":""},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/reference/filter_activity_presence.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Activity Presence — filter_activity_presence","title":"Filter Activity Presence — filter_activity_presence","text":"Filters cases based presence (absence) activities.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_activity_presence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Activity Presence — filter_activity_presence","text":"","code":"filter_activity_presence(   log,   activities = NULL,   method = c(\"all\", \"none\", \"one_of\", \"exact\", \"only\"),   reverse = FALSE,   eventlog = deprecated() )  # S3 method for log filter_activity_presence(   log,   activities = NULL,   method = c(\"all\", \"none\", \"one_of\", \"exact\", \"only\"),   reverse = FALSE,   eventlog = deprecated() )  # S3 method for grouped_log filter_activity_presence(   log,   activities = NULL,   method = c(\"all\", \"none\", \"one_of\", \"exact\", \"only\"),   reverse = FALSE,   eventlog = deprecated() )  ifilter_activity_presence(eventlog)"},{"path":"https://bupaverse.github.io/edeaR/reference/filter_activity_presence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Activity Presence — filter_activity_presence","text":"log log: Object class log derivatives (grouped_log, eventlog, activitylog, etc.). activities character vector: Containing one activity identifiers. method character (default \"\"): Filter method: \"\" (default), \"none\", \"one_of\", \"exact\", \"\". information, see 'Details' . reverse logical (default FALSE): Indicating whether selection reversed. eventlog ; please use log instead.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_activity_presence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Activity Presence — filter_activity_presence","text":"given object type log, return filtered log. given object type grouped_log, filter applied stratified way (.e. separately group). returned log grouped variables original log.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_activity_presence.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter Activity Presence — filter_activity_presence","text":"functions allows filter cases contain certain activities. requires input vector containing one activity labels method argument following options: \"\" means specified activity labels must present case selected. \"none\" means allowed present. \"one_of\" means least one must present. \"exact\" means exactly activities can present (although multiple times random orderings). \"\" means (set ) activities allowed present. one activity label supplied, note methods \"\" \"one_of\" identical.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_activity_presence.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Filter Activity Presence — filter_activity_presence","text":"filter_activity_presence(log): Filters activities log. filter_activity_presence(grouped_log): Filters activities grouped_log.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_activity_presence.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Filter Activity Presence — filter_activity_presence","text":"Swennen, M. (2018). Using Event Log Knowledge Support Operational Exellence Techniques (Doctoral dissertation). Hasselt University.","code":""},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/reference/filter_case.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Case — filter_case","title":"Filter Case — filter_case","text":"Filters log based case identifier. method cases argument, vector identifiers can given. selection can negated reverse argument.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_case.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Case — filter_case","text":"","code":"filter_case(log, cases, reverse = FALSE, eventlog = deprecated())  # S3 method for log filter_case(log, cases, reverse = FALSE, eventlog = deprecated())  # S3 method for grouped_log filter_case(log, cases, reverse = FALSE, eventlog = deprecated())  ifilter_case(eventlog)"},{"path":"https://bupaverse.github.io/edeaR/reference/filter_case.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Case — filter_case","text":"log log: Object class log derivatives (grouped_log, eventlog, activitylog, etc.). cases character vector: vector cases identifiers. reverse logical (default FALSE): Indicating whether selection reversed. eventlog ; please use log instead.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_case.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Case — filter_case","text":"given object type log, return filtered log. given object type grouped_log, filter applied stratified way (.e. separately group). returned log grouped variables original log.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_case.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Filter Case — filter_case","text":"filter_case(log): Filters cases log. filter_case(grouped_log): Filters cases grouped_log.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_case.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Filter Case — filter_case","text":"Swennen, M. (2018). Using Event Log Knowledge Support Operational Exellence Techniques (Doctoral dissertation). Hasselt University.","code":""},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/reference/filter_case_condition.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Case Condition — filter_case_condition","title":"Filter Case Condition — filter_case_condition","text":"Filters cases using condition. keeps cases condition valid least one event.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_case_condition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Case Condition — filter_case_condition","text":"","code":"filter_case_condition(   log,   ...,   condition = NULL,   reverse = FALSE,   eventlog = deprecated() )  # S3 method for log filter_case_condition(   log,   ...,   condition = deprecated(),   reverse = FALSE,   eventlog = deprecated() )  # S3 method for grouped_log filter_case_condition(   log,   ...,   condition = deprecated(),   reverse = FALSE,   eventlog = deprecated() )"},{"path":"https://bupaverse.github.io/edeaR/reference/filter_case_condition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Case Condition — filter_case_condition","text":"log log: Object class log derivatives (grouped_log, eventlog, activitylog, etc.). ... data-masking: Expressions return logical value, defined terms variables log. multiple expressions included, combined & operator. rows conditions evaluate TRUE kept. information, see filter. condition ; please use data-masking expressions instead. reverse logical (default FALSE): Indicating whether selection reversed. eventlog ; please use log instead.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_case_condition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Case Condition — filter_case_condition","text":"given object type log, return filtered log. given object type grouped_log, filter applied stratified way (.e. separately group). returned log grouped variables original log.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_case_condition.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Filter Case Condition — filter_case_condition","text":"filter_case_condition(log): Filters cases log. filter_case_condition(grouped_log): Filters cases grouped_log.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_case_condition.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Filter Case Condition — filter_case_condition","text":"Swennen, M. (2018). Using Event Log Knowledge Support Operational Exellence Techniques (Doctoral dissertation). Hasselt University.","code":""},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/reference/filter_endpoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Start and End Activities — filter_endpoints","title":"Filter Start and End Activities — filter_endpoints","text":"Filters log based provided set start end activities filter_endpoints method filters cases based first last activity label. can used two ways: specifying vectors allowed start activities /allowed end activities, specifying percentile. latter case, percentile value used cut . example, set 0.9, select common endpoint pairs together cover least 90% cases, filter log accordingly.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_endpoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Start and End Activities — filter_endpoints","text":"","code":"filter_endpoints(   log,   start_activities = NULL,   end_activities = NULL,   percentage = NULL,   reverse = FALSE,   eventlog = deprecated() )  # S3 method for log filter_endpoints(   log,   start_activities = NULL,   end_activities = NULL,   percentage = NULL,   reverse = FALSE,   eventlog = deprecated() )  # S3 method for grouped_log filter_endpoints(   log,   start_activities = NULL,   end_activities = NULL,   percentage = NULL,   reverse = FALSE,   eventlog = deprecated() )  ifilter_endpoints(eventlog)"},{"path":"https://bupaverse.github.io/edeaR/reference/filter_endpoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Start and End Activities — filter_endpoints","text":"log log: Object class log derivatives (grouped_log, eventlog, activitylog, etc.). start_activities, end_activities character vector (default NULL): vector activity identifiers, NULL. percentage numeric (default NULL): percentage p used percentile cut . used, common endpoint-pairs selected least p% cases selected. reverse logical (default FALSE): Indicating whether selection reversed. eventlog ; please use log instead.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_endpoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Start and End Activities — filter_endpoints","text":"given object type log, return filtered log. given object type grouped_log, filter applied stratified way (.e. separately group). returned log grouped variables original log.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_endpoints.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Filter Start and End Activities — filter_endpoints","text":"filter_endpoints(log): Filters cases log. filter_endpoints(grouped_log): Filters cases grouped_log.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_endpoints.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Filter Start and End Activities — filter_endpoints","text":"Swennen, M. (2018). Using Event Log Knowledge Support Operational Exellence Techniques (Doctoral dissertation). Hasselt University.","code":""},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/reference/filter_endpoints_condition.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Start and End Conditions — filter_endpoints_condition","title":"Filter Start and End Conditions — filter_endpoints_condition","text":"Filters cases first /last activity adhere specified conditions.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_endpoints_condition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Start and End Conditions — filter_endpoints_condition","text":"","code":"filter_endpoints_condition(   log,   start_condition = NULL,   end_condition = NULL,   reverse = FALSE,   eventlog = deprecated() )  # S3 method for eventlog filter_endpoints_condition(   log,   start_condition = NULL,   end_condition = NULL,   reverse = FALSE,   eventlog = deprecated() )  # S3 method for grouped_log filter_endpoints_condition(   log,   start_condition = NULL,   end_condition = NULL,   reverse = FALSE,   eventlog = deprecated() )  # S3 method for activitylog filter_endpoints_condition(   log,   start_condition = NULL,   end_condition = NULL,   reverse = FALSE,   eventlog = deprecated() )  filter_endpoints_conditions(   log,   start_condition = NULL,   end_condition = NULL,   reverse = FALSE,   eventlog = deprecated() )"},{"path":"https://bupaverse.github.io/edeaR/reference/filter_endpoints_condition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Start and End Conditions — filter_endpoints_condition","text":"log log: Object class log derivatives (grouped_log, eventlog, activitylog, etc.). start_condition, end_condition logical condition. reverse logical (default FALSE): Indicating whether selection reversed. eventlog ; please use log instead.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_endpoints_condition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Start and End Conditions — filter_endpoints_condition","text":"given object type log, return filtered log. given object type grouped_log, filter applied stratified way (.e. separately group). returned log grouped variables original log.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_endpoints_condition.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Filter Start and End Conditions — filter_endpoints_condition","text":"filter_endpoints_condition(eventlog): Filters cases eventlog. filter_endpoints_condition(grouped_log): Filters cases grouped_log. filter_endpoints_condition(activitylog): Filters cases activitylog.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_endpoints_condition.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Filter Start and End Conditions — filter_endpoints_condition","text":"Swennen, M. (2018). Using Event Log Knowledge Support Operational Exellence Techniques (Doctoral dissertation). Hasselt University.","code":""},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/reference/filter_infrequent_flows.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Infrequent Flows — filter_infrequent_flows","title":"Filter Infrequent Flows — filter_infrequent_flows","text":"Filter cases based infrequent flows.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_infrequent_flows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Infrequent Flows — filter_infrequent_flows","text":"","code":"filter_infrequent_flows(log, min_n, eventlog = deprecated())  # S3 method for eventlog filter_infrequent_flows(log, min_n, eventlog = deprecated())  # S3 method for grouped_eventlog filter_infrequent_flows(log, min_n, eventlog = deprecated())  # S3 method for activitylog filter_infrequent_flows(log, min_n, eventlog = deprecated())  # S3 method for grouped_activitylog filter_infrequent_flows(log, min_n, eventlog = deprecated())"},{"path":"https://bupaverse.github.io/edeaR/reference/filter_infrequent_flows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Infrequent Flows — filter_infrequent_flows","text":"log log: Object class log derivatives (grouped_log, eventlog, activitylog, etc.). min_n numeric: Cases containing flow occurs less min_n times discarded. eventlog ; please use log instead.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_infrequent_flows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Infrequent Flows — filter_infrequent_flows","text":"given object type log, return filtered log. given object type grouped_log, filter applied stratified way (.e. separately group). returned log grouped variables original log.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_infrequent_flows.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Filter Infrequent Flows — filter_infrequent_flows","text":"filter_infrequent_flows(eventlog): Filters infrequent flows eventlog. filter_infrequent_flows(grouped_eventlog): Filters infrequent flows grouped_eventlog. filter_infrequent_flows(activitylog): Filters infrequent flows activitylog. filter_infrequent_flows(grouped_activitylog): Filters infrequent flows grouped_activitylog.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_infrequent_flows.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Filter Infrequent Flows — filter_infrequent_flows","text":"Swennen, M. (2018). Using Event Log Knowledge Support Operational Exellence Techniques (Doctoral dissertation). Hasselt University.","code":""},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/reference/filter_lifecycle.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Life Cycle — filter_lifecycle","title":"Filter Life Cycle — filter_lifecycle","text":"Filters log based life cycle identifier.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_lifecycle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Life Cycle — filter_lifecycle","text":"","code":"filter_lifecycle(   log,   lifecycles,   reverse = FALSE,   lifecycle = deprecated(),   eventlog = deprecated() )  # S3 method for eventlog filter_lifecycle(   log,   lifecycles,   reverse = FALSE,   lifecycle = deprecated(),   eventlog = deprecated() )  # S3 method for grouped_eventlog filter_lifecycle(   log,   lifecycles,   reverse = FALSE,   lifecycle = deprecated(),   eventlog = deprecated() )  ifilter_lifecycle(eventlog)"},{"path":"https://bupaverse.github.io/edeaR/reference/filter_lifecycle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Life Cycle — filter_lifecycle","text":"log eventlog: Object class eventlog derivatives (grouped_eventlog). lifecycles character vector: vector life cycle identifiers. reverse logical (default FALSE): Indicating whether selection reversed. lifecycle ; please use lifecycles instead. eventlog ; please use log instead.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_lifecycle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Life Cycle — filter_lifecycle","text":"given object type log, return filtered log. given object type grouped_log, filter applied stratified way (.e. separately group). returned log grouped variables original log.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_lifecycle.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Filter Life Cycle — filter_lifecycle","text":"filter_lifecycle(eventlog): Filters based life cycle identifiers eventlog. filter_lifecycle(grouped_eventlog): Filters based life cycle identifiers grouped_eventlog.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_lifecycle.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Filter Life Cycle — filter_lifecycle","text":"Swennen, M. (2018). Using Event Log Knowledge Support Operational Exellence Techniques (Doctoral dissertation). Hasselt University.","code":""},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/reference/filter_lifecycle_presence.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Life Cycle Presence — filter_lifecycle_presence","title":"Filter Life Cycle Presence — filter_lifecycle_presence","text":"Filters activity instances based presence (absence) life cycles.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_lifecycle_presence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Life Cycle Presence — filter_lifecycle_presence","text":"","code":"filter_lifecycle_presence(   log,   lifecycles,   method = c(\"all\", \"none\", \"one_of\", \"exact\", \"only\"),   reverse = FALSE,   lifecycle = deprecated(),   eventlog = deprecated() )  # S3 method for eventlog filter_lifecycle_presence(   log,   lifecycles,   method = c(\"all\", \"none\", \"one_of\", \"exact\", \"only\"),   reverse = FALSE,   lifecycle = deprecated(),   eventlog = deprecated() )  # S3 method for grouped_eventlog filter_lifecycle_presence(   log,   lifecycles,   method = c(\"all\", \"none\", \"one_of\", \"exact\", \"only\"),   reverse = FALSE,   lifecycle = deprecated(),   eventlog = deprecated() )  ifilter_lifecycle_presence(eventlog)"},{"path":"https://bupaverse.github.io/edeaR/reference/filter_lifecycle_presence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Life Cycle Presence — filter_lifecycle_presence","text":"log eventlog: Object class eventlog derivatives (grouped_eventlog). lifecycles character vector: vector life cycle identifiers. method character (default \"\"): Filter method: \"\" (default), \"none\", \"one_of\", \"exact\", \"\". information, see 'Details' . reverse logical (default FALSE): Indicating whether selection reversed. lifecycle ; please use lifecycles instead. eventlog ; please use log instead.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_lifecycle_presence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Life Cycle Presence — filter_lifecycle_presence","text":"given object type log, return filtered log. given object type grouped_log, filter applied stratified way (.e. separately group). returned log grouped variables original log.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_lifecycle_presence.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter Life Cycle Presence — filter_lifecycle_presence","text":"function allows filter activity instances () contain certain life cycle identifiers. requires input vector containing one life cycle labels method argument following options: \"\" means specified life cycle labels must present activity instance selected. \"none\" means allowed present. \"one_of\" means least one must present. \"exact\" means exactly life cycle labels can present (although multiple times random orderings). \"\" means (set ) life cycle labels allowed present.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_lifecycle_presence.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Filter Life Cycle Presence — filter_lifecycle_presence","text":"filter_lifecycle_presence(eventlog): Filters activity instances presence life cycle labels eventlog. filter_lifecycle_presence(grouped_eventlog): Filters activity instances presence life cycle labels grouped_eventlog.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_lifecycle_presence.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Filter Life Cycle Presence — filter_lifecycle_presence","text":"Swennen, M. (2018). Using Event Log Knowledge Support Operational Exellence Techniques (Doctoral dissertation). Hasselt University.","code":""},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/reference/filter_precedence.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Precedence Relations — filter_precedence","title":"Filter Precedence Relations — filter_precedence","text":"Filters cases based precedence relations two sets activities.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_precedence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Precedence Relations — filter_precedence","text":"","code":"filter_precedence(   log,   antecedents,   consequents,   precedence_type = c(\"directly_follows\", \"eventually_follows\"),   filter_method = c(\"all\", \"one_of\", \"none\"),   reverse = FALSE,   eventlog = deprecated() )  # S3 method for log filter_precedence(   log,   antecedents,   consequents,   precedence_type = c(\"directly_follows\", \"eventually_follows\"),   filter_method = c(\"all\", \"one_of\", \"none\"),   reverse = FALSE,   eventlog = deprecated() )  # S3 method for grouped_log filter_precedence(   log,   antecedents,   consequents,   precedence_type = c(\"directly_follows\", \"eventually_follows\"),   filter_method = c(\"all\", \"one_of\", \"none\"),   reverse = FALSE,   eventlog = deprecated() )  ifilter_precedence(eventlog)"},{"path":"https://bupaverse.github.io/edeaR/reference/filter_precedence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Precedence Relations — filter_precedence","text":"log log: Object class log derivatives (grouped_log, eventlog, activitylog, etc.). antecedents, consequents character vector: set antecendent consequent activities. character vectors containing leaste one activity identifier. pairs antecedents consequents turned seperate precedence rules. precedence_type character (default \"directly_follows\"): \"directly_follows\", consequent activity happen immediately antecedent activities. \"eventually_follows\", events allowed happen . filter_method character (default \"\"): \"\", cases relations valid preserved. \"one_of\", cases least one conditions hold, preserved. \"none\", none relations allowed. reverse logical (default FALSE): Indicating whether selection reversed. eventlog ; please use log instead.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_precedence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Precedence Relations — filter_precedence","text":"given object type log, return filtered log. given object type grouped_log, filter applied stratified way (.e. separately group). returned log grouped variables original log.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_precedence.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter Precedence Relations — filter_precedence","text":"order extract subset event log conforms set precedence rules, one can use filter_precedence method. two types precendence relations can tested: activities directly follow (\"directly_follows\") , activities eventually follow (\"eventually_follows\") . type can set precedence_type argument. , filter requires vector one antecedents (containing activity labels), one consequents. Finally, filter_method argument can set. argument relevant one antecedent consequent. case, can specify possible precedence combinations must present (\"\"), least one (\"one_of\"), none (\"none\").","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_precedence.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Filter Precedence Relations — filter_precedence","text":"filter_precedence(log): Filters cases log. filter_precedence(grouped_log): Filters cases grouped_log.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_precedence.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Filter Precedence Relations — filter_precedence","text":"Swennen, M. (2018). Using Event Log Knowledge Support Operational Exellence Techniques (Doctoral dissertation). Hasselt University.","code":""},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/reference/filter_precedence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter Precedence Relations — filter_precedence","text":"","code":"eventdataR::patients %>%   filter_precedence(antecedents = \"Triage and Assessment\",             consequents = \"Blood test\",             precedence_type = \"directly_follows\") %>%   bupaR::traces() #> # A tibble: 3 × 3 #>   trace                                                          absol…¹ relat…² #>   <chr>                                                            <int>   <dbl> #> 1 Registration,Triage and Assessment,Blood test,MRI SCAN,Discus…     234 0.987   #> 2 Registration,Triage and Assessment,Blood test,MRI SCAN,Discus…       2 0.00844 #> 3 Registration,Triage and Assessment,Blood test                        1 0.00422 #> # … with abbreviated variable names ¹​absolute_frequency, ²​relative_frequency  eventdataR::patients %>%   filter_precedence(antecedents = \"Triage and Assessment\",             consequents = c(\"Blood test\", \"X-Ray\", \"MRI SCAN\"),             precedence_type = \"eventually_follows\",             filter_method = \"one_of\") %>%   bupaR::traces() #> # A tibble: 6 × 3 #>   trace                                                          absol…¹ relat…² #>   <chr>                                                            <int>   <dbl> #> 1 Registration,Triage and Assessment,X-Ray,Discuss Results,Chec…     258 0.518   #> 2 Registration,Triage and Assessment,Blood test,MRI SCAN,Discus…     234 0.470   #> 3 Registration,Triage and Assessment,Blood test,MRI SCAN,Discus…       2 0.00402 #> 4 Registration,Triage and Assessment,X-Ray                             2 0.00402 #> 5 Registration,Triage and Assessment,X-Ray,Discuss Results             1 0.00201 #> 6 Registration,Triage and Assessment,Blood test                        1 0.00201 #> # … with abbreviated variable names ¹​absolute_frequency, ²​relative_frequency"},{"path":"https://bupaverse.github.io/edeaR/reference/filter_precedence_condition.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Precedence Relations — filter_precedence_condition","title":"Filter Precedence Relations — filter_precedence_condition","text":"Filters cases based precedence relations two sets activities. information, see filter_precedence.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_precedence_condition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Precedence Relations — filter_precedence_condition","text":"","code":"filter_precedence_condition(   log,   antecedent_condition,   consequent_condition,   precedence_type = c(\"directly_follows\", \"eventually_follows\"),   reverse = FALSE,   eventlog = deprecated() )  # S3 method for log filter_precedence_condition(   log,   antecedent_condition,   consequent_condition,   precedence_type = c(\"directly_follows\", \"eventually_follows\"),   reverse = FALSE,   eventlog = deprecated() )  # S3 method for grouped_log filter_precedence_condition(   log,   antecedent_condition,   consequent_condition,   precedence_type = c(\"directly_follows\", \"eventually_follows\"),   reverse = FALSE,   eventlog = deprecated() )"},{"path":"https://bupaverse.github.io/edeaR/reference/filter_precedence_condition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Precedence Relations — filter_precedence_condition","text":"log log: Object class log derivatives (grouped_log, eventlog, activitylog, etc.). antecedent_condition, consequent_condition antecendent consequent conditions. precedence_type character (default \"directly_follows\"): \"directly_follows\", consequent activity happen immediately antecedent activities. \"eventually_follows\", events allowed happen . reverse logical (default FALSE): Indicating whether selection reversed. eventlog ; please use log instead.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_precedence_condition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Precedence Relations — filter_precedence_condition","text":"given object type log, return filtered log. given object type grouped_log, filter applied stratified way (.e. separately group). returned log grouped variables original log.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_precedence_condition.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Filter Precedence Relations — filter_precedence_condition","text":"filter_precedence_condition(log): Filters cases log. filter_precedence_condition(grouped_log): Filters cases grouped_log.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_precedence_condition.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Filter Precedence Relations — filter_precedence_condition","text":"Swennen, M. (2018). Using Event Log Knowledge Support Operational Exellence Techniques (Doctoral dissertation). Hasselt University.","code":""},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/reference/filter_precedence_resource.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Precedence Relations with Identical Resources — filter_precedence_resource","title":"Filter Precedence Relations with Identical Resources — filter_precedence_resource","text":"Filters cases based precedence relations two sets activities, antecendent consequent executed resource. information, see filter_precedence.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_precedence_resource.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Precedence Relations with Identical Resources — filter_precedence_resource","text":"","code":"filter_precedence_resource(   log,   antecedents,   consequents,   precedence_type = c(\"directly_follows\", \"eventually_follows\"),   filter_method = c(\"all\", \"one_of\", \"none\"),   reverse = FALSE,   eventlog = deprecated() )  # S3 method for log filter_precedence_resource(   log,   antecedents,   consequents,   precedence_type = c(\"directly_follows\", \"eventually_follows\"),   filter_method = c(\"all\", \"one_of\", \"none\"),   reverse = FALSE,   eventlog = deprecated() )  # S3 method for grouped_log filter_precedence_resource(   log,   antecedents,   consequents,   precedence_type = c(\"directly_follows\", \"eventually_follows\"),   filter_method = c(\"all\", \"one_of\", \"none\"),   reverse = FALSE,   eventlog = deprecated() )"},{"path":"https://bupaverse.github.io/edeaR/reference/filter_precedence_resource.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Precedence Relations with Identical Resources — filter_precedence_resource","text":"log log: Object class log derivatives (grouped_log, eventlog, activitylog, etc.). antecedents, consequents character vector: set antecendent consequent activities. character vectors containing leaste one activity identifier. pairs antecedents consequents turned seperate precedence rules. precedence_type character (default \"directly_follows\"): \"directly_follows\", consequent activity happen immediately antecedent activities. \"eventually_follows\", events allowed happen . filter_method character (default \"\"): \"\", cases relations valid preserved. \"one_of\", cases least one conditions hold, preserved. \"none\", none relations allowed. reverse logical (default FALSE): Indicating whether selection reversed. eventlog ; please use log instead.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_precedence_resource.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Precedence Relations with Identical Resources — filter_precedence_resource","text":"given object type log, return filtered log. given object type grouped_log, filter applied stratified way (.e. separately group). returned log grouped variables original log.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_precedence_resource.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Filter Precedence Relations with Identical Resources — filter_precedence_resource","text":"filter_precedence_resource(log): Filters cases log. filter_precedence_resource(grouped_log): Filters cases grouped_log.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_precedence_resource.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Filter Precedence Relations with Identical Resources — filter_precedence_resource","text":"Swennen, M. (2018). Using Event Log Knowledge Support Operational Exellence Techniques (Doctoral dissertation). Hasselt University.","code":""},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/reference/filter_processing_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Processing Time — filter_processing_time","title":"Filter Processing Time — filter_processing_time","text":"Filters cases based processing_time. filter can used using interval using percentage. percentage always start shortest cases first stop including cases specified percentile reached. hand, absolute interval can defined instead filter cases processing time interval. time units interval defined can supplied units argument.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_processing_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Processing Time — filter_processing_time","text":"","code":"filter_processing_time(   log,   interval = NULL,   percentage = NULL,   reverse = FALSE,   units = c(\"auto\", \"secs\", \"mins\", \"hours\", \"days\", \"weeks\"),   eventlog = deprecated() )  # S3 method for log filter_processing_time(   log,   interval = NULL,   percentage = NULL,   reverse = FALSE,   units = c(\"auto\", \"secs\", \"mins\", \"hours\", \"days\", \"weeks\"),   eventlog = deprecated() )  # S3 method for grouped_log filter_processing_time(   log,   interval = NULL,   percentage = NULL,   reverse = FALSE,   units = c(\"auto\", \"secs\", \"mins\", \"hours\", \"days\", \"weeks\"),   eventlog = deprecated() )  ifilter_processing_time(eventlog)"},{"path":"https://bupaverse.github.io/edeaR/reference/filter_processing_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Processing Time — filter_processing_time","text":"log log: Object class log derivatives (grouped_log, eventlog, activitylog, etc.). interval, percentage Provide either interval percentage.interval (numeric vector length 2): duration interval. Half open interval can created using NA.percentage (numeric): percentage p used relative filtering. reverse logical (default FALSE): Indicating whether selection reversed. units character (default \"auto\"): time unit processing times reported. one following values: \"auto\" (default), \"secs\", \"mins\", \"hours\", \"days\", \"weeks\". See also units argument difftime. eventlog ; please use log instead.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_processing_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Processing Time — filter_processing_time","text":"given object type log, return filtered log. given object type grouped_log, filter applied stratified way (.e. separately group). returned log grouped variables original log.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_processing_time.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Filter Processing Time — filter_processing_time","text":"filter_processing_time(log): Filters cases log. filter_processing_time(grouped_log): Filters cases grouped_log.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_processing_time.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Filter Processing Time — filter_processing_time","text":"Swennen, M. (2018). Using Event Log Knowledge Support Operational Exellence Techniques (Doctoral dissertation). Hasselt University.","code":""},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/reference/filter_resource.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Resource — filter_resource","title":"Filter Resource — filter_resource","text":"Filters log based resource identifiers method can used filter resource identifiers. resources argument, vector identifiers can given. selection can negated reverse argument.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_resource.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Resource — filter_resource","text":"","code":"filter_resource(log, resources, reverse = FALSE, eventlog = deprecated())  # S3 method for log filter_resource(log, resources, reverse = FALSE, eventlog = deprecated())  # S3 method for grouped_log filter_resource(log, resources, reverse = FALSE, eventlog = deprecated())  ifilter_resource(eventlog)"},{"path":"https://bupaverse.github.io/edeaR/reference/filter_resource.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Resource — filter_resource","text":"log log: Object class log derivatives (grouped_log, eventlog, activitylog, etc.). resources character vector: vector resources identifiers. reverse logical (default FALSE): Indicating whether selection reversed. eventlog ; please use log instead.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_resource.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Resource — filter_resource","text":"given object type log, return filtered log. given object type grouped_log, filter applied stratified way (.e. separately group). returned log grouped variables original log.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_resource.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Filter Resource — filter_resource","text":"filter_resource(log): Filters resources log. filter_resource(grouped_log): Filters resources grouped_log.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_resource.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Filter Resource — filter_resource","text":"Swennen, M. (2018). Using Event Log Knowledge Support Operational Exellence Techniques (Doctoral dissertation). Hasselt University.","code":""},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/reference/filter_resource_frequency.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Resource Frequency — filter_resource_frequency","title":"Filter Resource Frequency — filter_resource_frequency","text":"Filters log based frequency resources","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_resource_frequency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Resource Frequency — filter_resource_frequency","text":"","code":"filter_resource_frequency(   log,   interval = NULL,   percentage = NULL,   reverse = FALSE,   eventlog = deprecated() )  # S3 method for log filter_resource_frequency(   log,   interval = NULL,   percentage = NULL,   reverse = FALSE,   eventlog = deprecated() )  # S3 method for grouped_log filter_resource_frequency(   log,   interval = NULL,   percentage = NULL,   reverse = FALSE,   eventlog = deprecated() )  ifilter_resource_frequency(eventlog)"},{"path":"https://bupaverse.github.io/edeaR/reference/filter_resource_frequency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Resource Frequency — filter_resource_frequency","text":"log log: Object class log derivatives (grouped_log, eventlog, activitylog, etc.). percentage, interval target coverage activity instances. Provide either percentage interval.percentage (numeric): percentile p return common resource types log, account least p% activity instances.interval (numeric vector length 2): resource frequency interval. Half open interval can created using NA. information, see 'Details' . reverse logical (default FALSE): Indicating whether selection reversed. eventlog ; please use log instead.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_resource_frequency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Resource Frequency — filter_resource_frequency","text":"given object type log, return filtered log. given object type grouped_log, filter applied stratified way (.e. separately group). returned log grouped variables original log.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_resource_frequency.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter Resource Frequency — filter_resource_frequency","text":"Filtering log based resource frequency can done two ways: using interval allowed frequencies, specify coverage percentage: percentage: filtering using percentage p%, filter return p% activity instances, starting resource labels highest frequency. filter retain additional resource labels long number activity instances exceed percentage threshold. interval: filtering using interval, resource labels retained absolute frequency fall interval. interval specified using numeric vector length 2. Half open intervals can created using NA, e.g., c(10, NA) select resource labels occur 10 times .","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_resource_frequency.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Filter Resource Frequency — filter_resource_frequency","text":"filter_resource_frequency(log): Filters resources log. filter_resource_frequency(grouped_log): Filters resources grouped_log.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_resource_frequency.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Filter Resource Frequency — filter_resource_frequency","text":"Swennen, M. (2018). Using Event Log Knowledge Support Operational Exellence Techniques (Doctoral dissertation). Hasselt University.","code":""},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/reference/filter_throughput_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Throughput Time — filter_throughput_time","title":"Filter Throughput Time — filter_throughput_time","text":"Filters cases based throughput_time. filter can used using interval using percentage. percentage always start shortest cases first stop including cases specified percentile reached. hand, absolute interval can defined instead filter cases throughput time interval. time units interval defined can supplied units argument.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_throughput_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Throughput Time — filter_throughput_time","text":"","code":"filter_throughput_time(   log,   interval = NULL,   percentage = NULL,   reverse = FALSE,   units = c(\"auto\", \"secs\", \"mins\", \"hours\", \"days\", \"weeks\"),   eventlog = deprecated() )  # S3 method for log filter_throughput_time(   log,   interval = NULL,   percentage = NULL,   reverse = FALSE,   units = c(\"auto\", \"secs\", \"mins\", \"hours\", \"days\", \"weeks\"),   eventlog = deprecated() )  # S3 method for grouped_log filter_throughput_time(   log,   interval = NULL,   percentage = NULL,   reverse = FALSE,   units = c(\"auto\", \"secs\", \"mins\", \"hours\", \"days\", \"weeks\"),   eventlog = deprecated() )  ifilter_throughput_time(eventlog)"},{"path":"https://bupaverse.github.io/edeaR/reference/filter_throughput_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Throughput Time — filter_throughput_time","text":"log log: Object class log derivatives (grouped_log, eventlog, activitylog, etc.). interval, percentage Provide either interval percentage.interval (numeric vector length 2): duration interval. Half open interval can created using NA.percentage (numeric): percentage p used relative filtering. reverse logical (default FALSE): Indicating whether selection reversed. units character (default \"auto\"): time unit throughput times reported. one following values: \"auto\" (default), \"secs\", \"mins\", \"hours\", \"days\", \"weeks\". See also units argument difftime. eventlog ; please use log instead.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_throughput_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Throughput Time — filter_throughput_time","text":"given object type log, return filtered log. given object type grouped_log, filter applied stratified way (.e. separately group). returned log grouped variables original log.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_throughput_time.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Filter Throughput Time — filter_throughput_time","text":"filter_throughput_time(log): Filters cases log. filter_throughput_time(grouped_log): Filters cases grouped_log.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_throughput_time.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Filter Throughput Time — filter_throughput_time","text":"Swennen, M. (2018). Using Event Log Knowledge Support Operational Exellence Techniques (Doctoral dissertation). Hasselt University.","code":""},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/reference/filter_time_period.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Time Period — filter_time_period","title":"Filter Time Period — filter_time_period","text":"Function filter log using time period.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_time_period.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Time Period — filter_time_period","text":"","code":"filter_time_period(   log,   interval = NULL,   filter_method = c(\"contained\", \"intersecting\", \"start\", \"complete\", \"trim\"),   force_trim = FALSE,   reverse = FALSE,   eventlog = deprecated() )  # S3 method for eventlog filter_time_period(   log,   interval = NULL,   filter_method = c(\"contained\", \"intersecting\", \"start\", \"complete\", \"trim\"),   force_trim = FALSE,   reverse = FALSE,   eventlog = deprecated() )  # S3 method for grouped_eventlog filter_time_period(   log,   interval = NULL,   filter_method = c(\"contained\", \"intersecting\", \"start\", \"complete\", \"trim\"),   force_trim = FALSE,   reverse = FALSE,   eventlog = deprecated() )  # S3 method for activitylog filter_time_period(   log,   interval = NULL,   filter_method = c(\"contained\", \"intersecting\", \"start\", \"complete\", \"trim\"),   force_trim = FALSE,   reverse = FALSE,   eventlog = deprecated() )  # S3 method for grouped_activitylog filter_time_period(   log,   interval = NULL,   filter_method = c(\"contained\", \"intersecting\", \"start\", \"complete\", \"trim\"),   force_trim = FALSE,   reverse = FALSE,   eventlog = deprecated() )  ifilter_time_period(eventlog)"},{"path":"https://bupaverse.github.io/edeaR/reference/filter_time_period.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Time Period — filter_time_period","text":"log log: Object class log derivatives (grouped_log, eventlog, activitylog, etc.). interval Date POSIXct vector: time interval (vector length 2 type Date POSIXct). Half-open intervals can created NA. filter_method character (default \"contained\"): Filtering method: \"contained\" (default), \"intersecting\", \"start\", \"complete\", \"trim\". information, see 'Details' . force_trim logical (default FALSE): TRUE combination filter_method \"trim\", activity instances edges interval cut exact edge interval. reverse logical (default FALSE): Indicating whether selection reversed. eventlog ; please use log instead.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_time_period.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Time Period — filter_time_period","text":"given object type log, return filtered log. given object type grouped_log, filter applied stratified way (.e. separately group). returned log grouped variables original log.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_time_period.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter Time Period — filter_time_period","text":"Event data can filtered supplying time window method filter_time_period. 5 different values filter_method: \"contained\": Keeps events related cases contained time period. \"intersecting\": Keeps events related cases least one event started /ended time period. \"start\": Keeps events related cases started time period. \"complete\": Keeps events related cases complete time period. \"trim\": Keeps events started ended time frame.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_time_period.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Filter Time Period — filter_time_period","text":"filter_time_period(eventlog): Filters activity instances eventlog. filter_time_period(grouped_eventlog): Filters activity instances grouped_eventlog. filter_time_period(activitylog): Filters activity instances activitylog. filter_time_period(grouped_activitylog): Filters activity instances grouped_activitylog.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_time_period.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Filter Time Period — filter_time_period","text":"Swennen, M. (2018). Using Event Log Knowledge Support Operational Exellence Techniques (Doctoral dissertation). Hasselt University.","code":""},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/reference/filter_trace.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Trace — filter_trace","title":"Filter Trace — filter_trace","text":"Filters log based trace identifier. method can used filter trace identifier, can obtained case_list. trace_ids argument, vector identifiers can given. selection can negated reverse argument.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_trace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Trace — filter_trace","text":"","code":"filter_trace(log, trace_ids, reverse = FALSE, eventlog = deprecated())  # S3 method for log filter_trace(log, trace_ids, reverse = FALSE, eventlog = deprecated())  # S3 method for grouped_log filter_trace(log, trace_ids, reverse = FALSE, eventlog = deprecated())"},{"path":"https://bupaverse.github.io/edeaR/reference/filter_trace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Trace — filter_trace","text":"log log: Object class log derivatives (grouped_log, eventlog, activitylog, etc.). trace_ids character vector: vector trace identifiers reverse logical (default FALSE): Indicating whether selection reversed. eventlog ; please use log instead.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_trace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Trace — filter_trace","text":"given object type log, return filtered log. given object type grouped_log, filter applied stratified way (.e. separately group). returned log grouped variables original log.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_trace.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Filter Trace — filter_trace","text":"filter_trace(log): Filters cases log. filter_trace(grouped_log): Filters cases grouped_log.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_trace.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Filter Trace — filter_trace","text":"Swennen, M. (2018). Using Event Log Knowledge Support Operational Exellence Techniques (Doctoral dissertation). Hasselt University.","code":""},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/reference/filter_trace_frequency.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Trace Frequency — filter_trace_frequency","title":"Filter Trace Frequency — filter_trace_frequency","text":"Filters log based frequency traces, using interval percentile cut .","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_trace_frequency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Trace Frequency — filter_trace_frequency","text":"","code":"filter_trace_frequency(   log,   interval = NULL,   percentage = NULL,   reverse = FALSE,   eventlog = deprecated() )  # S3 method for log filter_trace_frequency(   log,   interval = NULL,   percentage = NULL,   reverse = FALSE,   eventlog = deprecated() )  # S3 method for grouped_log filter_trace_frequency(   log,   interval = NULL,   percentage = NULL,   reverse = FALSE,   eventlog = deprecated() )  ifilter_trace_frequency(eventlog)"},{"path":"https://bupaverse.github.io/edeaR/reference/filter_trace_frequency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Trace Frequency — filter_trace_frequency","text":"log log: Object class log derivatives (grouped_log, eventlog, activitylog, etc.). percentage, interval target coverage activity instances. Provide either percentage interval.percentage (numeric): percentile p select common traces log, least p% cases covered.interval (numeric vector length 2): trace frequency interval. filter select cases trace frequency inside interval. Half open interval can created using NA. information, see 'Details' . reverse logical (default FALSE): Indicating whether selection reversed. eventlog ; please use log instead.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_trace_frequency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Trace Frequency — filter_trace_frequency","text":"given object type log, return filtered log. given object type grouped_log, filter applied stratified way (.e. separately group). returned log grouped variables original log.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_trace_frequency.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter Trace Frequency — filter_trace_frequency","text":"Filtering log based trace frequency can done two ways: using interval allowed frequencies, specify coverage percentage: percentage: filtering using percentage p%, filter return p% cases, starting traces highest frequency. filter retain additional traces long number activity instances exceed percentage threshold. interval: filtering using interval, traces retained absolute frequency fall interval. interval specified using numeric vector length 2. Half open intervals can created using NA, e.g., c(10, NA) select cases trace occurs 10 times .","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_trace_frequency.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Filter Trace Frequency — filter_trace_frequency","text":"filter_trace_frequency(log): Filters cases log. filter_trace_frequency(grouped_log): Filters cases grouped_log.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_trace_frequency.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Filter Trace Frequency — filter_trace_frequency","text":"Swennen, M. (2018). Using Event Log Knowledge Support Operational Exellence Techniques (Doctoral dissertation). Hasselt University.","code":""},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/reference/filter_trace_length.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Trace Length — filter_trace_length","title":"Filter Trace Length — filter_trace_length","text":"Filters cases trace_length, using percentile threshold interval. filter can used using interval using percentage. percentage always start shortest cases first stop including cases specified percentile reached. hand, absolute interval can defined instead filter cases length interval.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_trace_length.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Trace Length — filter_trace_length","text":"","code":"filter_trace_length(   log,   interval = NULL,   percentage = NULL,   reverse = FALSE,   eventlog = deprecated() )  # S3 method for log filter_trace_length(   log,   interval = NULL,   percentage = NULL,   reverse = FALSE,   eventlog = deprecated() )  # S3 method for grouped_log filter_trace_length(   log,   interval = NULL,   percentage = NULL,   reverse = FALSE,   eventlog = deprecated() )  ifilter_trace_length(eventlog)"},{"path":"https://bupaverse.github.io/edeaR/reference/filter_trace_length.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Trace Length — filter_trace_length","text":"log log: Object class log derivatives (grouped_log, eventlog, activitylog, etc.). interval, percentage Provide either interval percentage.interval (numeric vector length 2): trace length interval. Half open interval can created using NA.percentage (numeric): percentage p used relative filtering. reverse logical (default FALSE): Indicating whether selection reversed. eventlog ; please use log instead.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_trace_length.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Trace Length — filter_trace_length","text":"given object type log, return filtered log. given object type grouped_log, filter applied stratified way (.e. separately group). returned log grouped variables original log.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_trace_length.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Filter Trace Length — filter_trace_length","text":"filter_trace_length(log): Filters cases log. filter_trace_length(grouped_log): Filters cases grouped_log.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_trace_length.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Filter Trace Length — filter_trace_length","text":"Swennen, M. (2018). Using Event Log Knowledge Support Operational Exellence Techniques (Doctoral dissertation). Hasselt University.","code":""},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/reference/filter_trim.html","id":null,"dir":"Reference","previous_headings":"","what":"Trim Cases — filter_trim","title":"Trim Cases — filter_trim","text":"Trim cases first event set start activities last event set end activities. One can trim cases removing one activity instances start /end case. Trimming performed cases start /end point belonging set allowed activity labels. filter requires set allowed start activities /set allowed end activities. one provided trim cases edge. selection can reversed, means trimmed events start end cases retained. , argument allows cut intermediate parts traces.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_trim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trim Cases — filter_trim","text":"","code":"filter_trim(   log,   start_activities = NULL,   end_activities = NULL,   reverse = FALSE,   eventlog = deprecated() )  # S3 method for eventlog filter_trim(   log,   start_activities = NULL,   end_activities = NULL,   reverse = FALSE,   eventlog = deprecated() )  # S3 method for grouped_eventlog filter_trim(   log,   start_activities = NULL,   end_activities = NULL,   reverse = FALSE,   eventlog = deprecated() )  # S3 method for activitylog filter_trim(   log,   start_activities = NULL,   end_activities = NULL,   reverse = FALSE,   eventlog = deprecated() )  # S3 method for grouped_activitylog filter_trim(   log,   start_activities = NULL,   end_activities = NULL,   reverse = FALSE,   eventlog = deprecated() )  ifilter_trim(eventlog)"},{"path":"https://bupaverse.github.io/edeaR/reference/filter_trim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trim Cases — filter_trim","text":"log log: Object class log derivatives (grouped_log, eventlog, activitylog, etc.). start_activities, end_activities character vector (default NULL): vector activity identifiers, NULL. reverse logical (default FALSE): Indicating whether selection reversed. eventlog ; please use log instead.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_trim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trim Cases — filter_trim","text":"given object type log, return filtered log. given object type grouped_log, filter applied stratified way (.e. separately group). returned log grouped variables original log.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_trim.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Trim Cases — filter_trim","text":"filter_trim(eventlog): Filters activity instances eventlog. filter_trim(grouped_eventlog): Filters activity instances grouped_eventlog. filter_trim(activitylog): Filters activity instances activitylog. filter_trim(grouped_activitylog): Filters activity instances grouped_activitylog.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_trim.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Trim Cases — filter_trim","text":"Swennen, M. (2018). Using Event Log Knowledge Support Operational Exellence Techniques (Doctoral dissertation). Hasselt University.","code":""},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/reference/filter_trim_lifecycle.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Trim Life Cycle — filter_trim_lifecycle","title":"Filter Trim Life Cycle — filter_trim_lifecycle","text":"Trim activity instances first event set start life cycle labels last event set end life cycle labels. One can trim activity instances removing one events start /end activity instances. Trimming performed activity instances start /end point belonging set allowed life cycle labels. filter requires set allowed start life cycle labels /set allowed life cycle labels. one provided trim activity instances edge.selection can reversed, means trimmed events start end activity instances retained. , argument allows cut intermediate parts activity instances.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_trim_lifecycle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Trim Life Cycle — filter_trim_lifecycle","text":"","code":"filter_trim_lifecycle(   log,   start_lifecycles = NULL,   end_lifecycles = NULL,   reverse = FALSE,   start_lifecycle = deprecated(),   end_lifecycle = deprecated(),   eventlog = deprecated() )  # S3 method for eventlog filter_trim_lifecycle(   log,   start_lifecycles = NULL,   end_lifecycles = NULL,   reverse = FALSE,   start_lifecycle = deprecated(),   end_lifecycle = deprecated(),   eventlog = deprecated() )  # S3 method for grouped_eventlog filter_trim_lifecycle(   log,   start_lifecycles = NULL,   end_lifecycles = NULL,   reverse = FALSE,   start_lifecycle = deprecated(),   end_lifecycle = deprecated(),   eventlog = deprecated() )  ifilter_trim_lifecycle(eventlog)"},{"path":"https://bupaverse.github.io/edeaR/reference/filter_trim_lifecycle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Trim Life Cycle — filter_trim_lifecycle","text":"log eventlog: Object class eventlog derivatives (grouped_eventlog). start_lifecycles, end_lifecycles character vector (default NULL): vector life cycle identifiers, NULL. reverse logical (default FALSE): Indicating whether selection reversed. start_lifecycle ; please use start_lifecycles instead. end_lifecycle ; please use end_lifecycles instead. eventlog ; please use log instead.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_trim_lifecycle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Trim Life Cycle — filter_trim_lifecycle","text":"given object type log, return filtered log. given object type grouped_log, filter applied stratified way (.e. separately group). returned log grouped variables original log.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_trim_lifecycle.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Filter Trim Life Cycle — filter_trim_lifecycle","text":"filter_trim_lifecycle(eventlog): Filters activity instances eventlog. filter_trim_lifecycle(grouped_eventlog): Filters activity instances grouped_eventlog.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/filter_trim_lifecycle.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Filter Trim Life Cycle — filter_trim_lifecycle","text":"Swennen, M. (2018). Using Event Log Knowledge Support Operational Exellence Techniques (Doctoral dissertation). Hasselt University.","code":""},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/reference/idle_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Idle Time — idle_time","title":"Idle Time — idle_time","text":"Calculates amount time activity occurs.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/idle_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Idle Time — idle_time","text":"","code":"idle_time(   log,   level = c(\"log\", \"trace\", \"case\", \"resource\"),   append = deprecated(),   append_column = NULL,   units = c(\"auto\", \"secs\", \"mins\", \"hours\", \"days\", \"weeks\"),   sort = TRUE,   eventlog = deprecated() )  # S3 method for eventlog idle_time(   log,   level = c(\"log\", \"trace\", \"case\", \"resource\"),   append = deprecated(),   append_column = NULL,   units = c(\"auto\", \"secs\", \"mins\", \"hours\", \"days\", \"weeks\"),   sort = TRUE,   eventlog = deprecated() )  # S3 method for grouped_eventlog idle_time(   log,   level = c(\"log\", \"case\", \"trace\", \"resource\"),   append = deprecated(),   append_column = NULL,   units = c(\"auto\", \"secs\", \"mins\", \"hours\", \"days\", \"weeks\"),   sort = TRUE,   eventlog = deprecated() )  # S3 method for activitylog idle_time(   log,   level = c(\"log\", \"trace\", \"case\", \"resource\"),   append = deprecated(),   append_column = NULL,   units = c(\"auto\", \"secs\", \"mins\", \"hours\", \"days\", \"weeks\"),   sort = TRUE,   eventlog = deprecated() )  # S3 method for grouped_activitylog idle_time(   log,   level = c(\"log\", \"trace\", \"case\", \"resource\"),   append = deprecated(),   append_column = NULL,   units = c(\"auto\", \"secs\", \"mins\", \"hours\", \"days\", \"weeks\"),   sort = TRUE,   eventlog = deprecated() )"},{"path":"https://bupaverse.github.io/edeaR/reference/idle_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Idle Time — idle_time","text":"log log: Object class log derivatives (grouped_log, eventlog, activitylog, etc.). level character (default \"log\"): Level granularity analysis: \"log\" (default), \"trace\", \"case\", \"resource\". information, see vignette(\"metrics\", \"edeaR\") 'Details' . append logical (default FALSE) : arguments append append_column deprecated favour augment. Indicating whether append results original log. Ignored level \"log\" \"trace\". append_column arguments append append_column deprecated favour augment. output columns append log, append = TRUE. Default column depends chosen level. units character (default \"auto\"): time unit throughput times reported. one following values: \"auto\" (default), \"secs\", \"mins\", \"hours\", \"days\", \"weeks\". See also units argument difftime. sort logical (default TRUE): Sort decreasing idle time. relevant \"trace\" \"resource\" level. eventlog ; please use log instead.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/idle_time.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Idle Time — idle_time","text":"Argument level following options: \"log\" level, idle time metric provides overview summary statistics idle time per case, aggregated complete log. \"trace\" level, idle time metric provides overview summary statistics idle time trace log. \"case\" level, idle time metric provides overview total idle time per case \"resource\" level, metric can used get insight amount time resource \"wastes\" process.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/idle_time.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Idle Time — idle_time","text":"idle_time(eventlog): Computes idle time eventlog. idle_time(grouped_eventlog): Computes idle time grouped_eventlog. idle_time(activitylog): Computes idle time activitylog. idle_time(grouped_activitylog): Computes idle time grouped_activitylog.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/idle_time.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Idle Time — idle_time","text":"Swennen, M. (2018). Using Event Log Knowledge Support Operational Exellence Techniques (Doctoral dissertation). Hasselt University.","code":""},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/reference/number_of_repetitions.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of Repetitions — number_of_repetitions","title":"Number of Repetitions — number_of_repetitions","text":"Provides information statistics number repetitions repetition execution activity within case activity already executed , one activities executed .","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/number_of_repetitions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of Repetitions — number_of_repetitions","text":"","code":"number_of_repetitions(   log,   type = c(\"all\", \"repeat\", \"redo\"),   level = c(\"log\", \"case\", \"activity\", \"resource\", \"resource-activity\"),   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )  # S3 method for eventlog number_of_repetitions(   log,   type = c(\"all\", \"repeat\", \"redo\"),   level = c(\"log\", \"case\", \"activity\", \"resource\", \"resource-activity\"),   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )  # S3 method for grouped_eventlog number_of_repetitions(   log,   type = c(\"all\", \"repeat\", \"redo\"),   level = c(\"log\", \"case\", \"activity\", \"resource\", \"resource-activity\"),   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )  # S3 method for activitylog number_of_repetitions(   log,   type = c(\"all\", \"repeat\", \"redo\"),   level = c(\"log\", \"case\", \"activity\", \"resource\", \"resource-activity\"),   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )  # S3 method for grouped_activitylog number_of_repetitions(   log,   type = c(\"all\", \"repeat\", \"redo\"),   level = c(\"log\", \"case\", \"activity\", \"resource\", \"resource-activity\"),   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )"},{"path":"https://bupaverse.github.io/edeaR/reference/number_of_repetitions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of Repetitions — number_of_repetitions","text":"log log: Object class log derivatives (grouped_log, eventlog, activitylog, etc.). type character (default \"\"): type repetitions: \"\" (default), \"repeat\", \"redo\". information, see 'Details' . level character (default \"log\"): Level granularity analysis: \"log\" (default), \"case\", \"activity\", \"resource\", \"resource-activity\". information, see vignette(\"metrics\", \"edeaR\") 'Details' . append logical (default FALSE) : arguments append append_column deprecated favour augment. Indicating whether append results original log. Ignored level \"log\" \"trace\". append_column arguments append append_column deprecated favour augment. output columns append log, append = TRUE. Default column depends chosen level. sort logical (default TRUE): Sort output count. levels frequency count output. eventlog ; please use log instead.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/number_of_repetitions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Number of Repetitions — number_of_repetitions","text":"Argument level following options: \"log\" level, metric shows summary statistics number repetitions within case, can provide insights amount waste log. combination two occurrences activity, executed immediately following , resource counted one repeat repetition activity. \"case\" level, metric provides absolute relative number repetitions case. \"activity\" level, metric shows activities occur repetition. absolute relative number repeat redo repetitions provided metric, giving overview per activity. \"resource\" level, can interesting overview resources need one time execute activity case resources need activity redone later case another resource. metric provides absolute relative number times resource appears repetition. \"resource-activity\" level, metric provides specific information activities resources involved repetitions. metric absolute relative number repeat redo repetitions provided. , two difierent relative numbers provided, one relative total number executions activity complete log, one relative total number executions performed resource throughout complete log. Similar self-loop metric, distinction made \"repeat\" \"redo\" repetitions, can set type argument: \"repeat\" repetitions activity executions activity type executed immediately following , resource. \"redo\" repetitions activity executions activity type executed immediately following different resource first activity occurrence activity type.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/number_of_repetitions.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Number of Repetitions — number_of_repetitions","text":"number_of_repetitions(eventlog): Computes number repetitions eventlog. number_of_repetitions(grouped_eventlog): Computes number repetitions grouped_eventlog. number_of_repetitions(activitylog): Computes number repetitions activitylog. number_of_repetitions(grouped_activitylog): Computes number repetitions grouped_activitylog.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/number_of_repetitions.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Number of Repetitions — number_of_repetitions","text":"Swennen, M. (2018). Using Event Log Knowledge Support Operational Exellence Techniques (Doctoral dissertation). Hasselt University.","code":""},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/reference/number_of_selfloops.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of Self-loops — number_of_selfloops","title":"Number of Self-loops — number_of_selfloops","text":"Provides information statistics number self-loops trace. Activity instances activity type executed immediately resource self-loop (\"length-1-loop\"). activity instance activity type executed 3 times resource, defined \"size 2 self-loop\".","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/number_of_selfloops.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of Self-loops — number_of_selfloops","text":"","code":"number_of_selfloops(   log,   type = c(\"all\", \"repeat\", \"redo\"),   level = c(\"log\", \"case\", \"activity\", \"resource\", \"resource-activity\"),   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )  # S3 method for eventlog number_of_selfloops(   log,   type = c(\"all\", \"repeat\", \"redo\"),   level = c(\"log\", \"case\", \"activity\", \"resource\", \"resource-activity\"),   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )  # S3 method for grouped_eventlog number_of_selfloops(   log,   type = c(\"all\", \"repeat\", \"redo\"),   level = c(\"log\", \"case\", \"activity\", \"resource\", \"resource-activity\"),   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )  # S3 method for activitylog number_of_selfloops(   log,   type = c(\"all\", \"repeat\", \"redo\"),   level = c(\"log\", \"case\", \"activity\", \"resource\", \"resource-activity\"),   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )  # S3 method for grouped_activitylog number_of_selfloops(   log,   type = c(\"all\", \"repeat\", \"redo\"),   level = c(\"log\", \"case\", \"activity\", \"resource\", \"resource-activity\"),   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )"},{"path":"https://bupaverse.github.io/edeaR/reference/number_of_selfloops.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of Self-loops — number_of_selfloops","text":"log log: Object class log derivatives (grouped_log, eventlog, activitylog, etc.). type character (default \"\"): type repetitions: \"\" (default), \"repeat\", \"redo\". information, see 'Details' . level character (default \"log\"): Level granularity analysis: \"log\" (default), \"case\", \"activity\", \"resource\", \"resource-activity\". information, see vignette(\"metrics\", \"edeaR\") 'Details' . append logical (default FALSE) : arguments append append_column deprecated favour augment. Indicating whether append results original log. Ignored level \"log\" \"trace\". append_column arguments append append_column deprecated favour augment. output columns append log, append = TRUE. Default column depends chosen level. sort logical (default TRUE): Sort output count. levels frequency count output. eventlog ; please use log instead.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/number_of_selfloops.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Number of Self-loops — number_of_selfloops","text":"Two types self-loops defined, can chosen using type argument: \"repeat\" self-loops activity executions activity type executed immediately following resource. \"redo\" self-loops activity executions activity type executed immediately following different resource. Argument level following options: \"log\" level, summary statistics number self-loops within trace can give first insight amount waste log. stated earlier, combination two occurrences activity executed resource counted one repeat self-loop activity. \"case\" level, overview provided absolute relative number repeat redo self-loops case. calculate relative number, (repeat redo) self-loop counted 1 occurrence, activity instances also counted 1. \"activity\" level, absolute relative number self-loops per activity can indication activities causing waste process. \"resource\" level, metric can give insights resources needs repeat work often within case, resource work redone another resource within case. metric shows absolute relative number repeat redo self-loops resource log. \"resource-activity\" level, metric can used get insight activities crucial resources. metric shows absolute relative number repeat redo self-loops resource-activity combinations occur log. Two different relative numbers provided , one resource perspective one activity perspective. resource perspective, denominator total number executions resource consideration. activity perspective, denominator total number occurrences activity consideration.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/number_of_selfloops.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Number of Self-loops — number_of_selfloops","text":"number_of_selfloops(eventlog): Computes number self-loops eventlog. number_of_selfloops(grouped_eventlog): Computes number self-loops grouped_eventlog. number_of_selfloops(activitylog): Computes number self-loops activitylog. number_of_selfloops(grouped_activitylog): Computes number self-loops grouped_activitylog.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/number_of_selfloops.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Number of Self-loops — number_of_selfloops","text":"Swennen, M. (2018). Using Event Log Knowledge Support Operational Exellence Techniques (Doctoral dissertation). Hasselt University.","code":""},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/reference/number_of_traces.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of Traces — number_of_traces","title":"Number of Traces — number_of_traces","text":"Computes many traces . metric provides two values, absolute relative number traces occur log. relative number shows expected number traces needed cover 100 cases.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/number_of_traces.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of Traces — number_of_traces","text":"","code":"number_of_traces(log, eventlog = deprecated())  # S3 method for log number_of_traces(log, eventlog = deprecated())  # S3 method for grouped_log number_of_traces(log, eventlog = deprecated())"},{"path":"https://bupaverse.github.io/edeaR/reference/number_of_traces.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of Traces — number_of_traces","text":"log log: Object class log derivatives (grouped_log, eventlog, activitylog, etc.). eventlog ; please use log instead.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/number_of_traces.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Number of Traces — number_of_traces","text":"number_of_traces(log): Number traces log. number_of_traces(grouped_log): Number traces grouped_log.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/number_of_traces.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Number of Traces — number_of_traces","text":"Swennen, M. (2018). Using Event Log Knowledge Support Operational Exellence Techniques (Doctoral dissertation). Hasselt University.","code":""},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/reference/plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Methods — plot","title":"Plot Methods — plot","text":"Visualize metric","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Methods — plot","text":"","code":"# S3 method for activity_frequency plot(x, ...)  # S3 method for activity_presence plot(x, ...)  # S3 method for end_activities plot(x, ...)  # S3 method for idle_time plot(x, ...)  # S3 method for processing_time plot(x, ...)  # S3 method for referral_matrix plot(x, ...)  # S3 method for resource_frequency plot(x, ...)  # S3 method for resource_involvement plot(x, ...)  # S3 method for resource_specialisation plot(x, ...)  # S3 method for start_activities plot(x, ...)  # S3 method for throughput_time plot(x, ...)  # S3 method for trace_coverage plot(x, ...)  # S3 method for trace_length plot(x, ...)  # S3 method for number_of_selfloops plot(x, ...)  # S3 method for number_of_repetitions plot(x, ...)"},{"path":"https://bupaverse.github.io/edeaR/reference/plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Methods — plot","text":"x Data plot ... Additional variables","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Methods — plot","text":"ggplot object, can customized , deemed necessary.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/print.work_schedule.html","id":null,"dir":"Reference","previous_headings":"","what":"Print work schedule — print.work_schedule","title":"Print work schedule — print.work_schedule","text":"Print work schedule","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/print.work_schedule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print work schedule — print.work_schedule","text":"","code":"# S3 method for work_schedule print(x, ...)"},{"path":"https://bupaverse.github.io/edeaR/reference/print.work_schedule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print work schedule — print.work_schedule","text":"x Work schedule print ... Additional arguments (ignored)","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/processing_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Processing Time — processing_time","title":"Processing Time — processing_time","text":"Provides summary statistics processing time process. contrast throughput_time cases log, metrics concerning active time actual processing time provide summary statistics processing time events level complete log, specific cases, traces, activities, resource-activity combinations.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/processing_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Processing Time — processing_time","text":"","code":"processing_time(   log,   level = c(\"log\", \"trace\", \"case\", \"activity\", \"resource\", \"resource-activity\"),   append = deprecated(),   append_column = NULL,   units = c(\"auto\", \"secs\", \"mins\", \"hours\", \"days\", \"weeks\"),   sort = TRUE,   work_schedule = NULL,   eventlog = deprecated() )  # S3 method for eventlog processing_time(   log,   level = c(\"log\", \"trace\", \"case\", \"activity\", \"resource\", \"resource-activity\"),   append = deprecated(),   append_column = NULL,   units = c(\"auto\", \"secs\", \"mins\", \"hours\", \"days\", \"weeks\"),   sort = TRUE,   work_schedule = NULL,   eventlog = deprecated() )  # S3 method for grouped_eventlog processing_time(   log,   level = c(\"log\", \"trace\", \"case\", \"activity\", \"resource\", \"resource-activity\"),   append = deprecated(),   append_column = NULL,   units = c(\"auto\", \"secs\", \"mins\", \"hours\", \"days\", \"weeks\"),   sort = TRUE,   work_schedule = NULL,   eventlog = deprecated() )  # S3 method for activitylog processing_time(   log,   level = c(\"log\", \"trace\", \"case\", \"activity\", \"resource\", \"resource-activity\"),   append = deprecated(),   append_column = NULL,   units = c(\"auto\", \"secs\", \"mins\", \"hours\", \"days\", \"weeks\"),   sort = TRUE,   work_schedule = NULL,   eventlog = deprecated() )  # S3 method for grouped_activitylog processing_time(   log,   level = c(\"log\", \"trace\", \"case\", \"activity\", \"resource\", \"resource-activity\"),   append = deprecated(),   append_column = NULL,   units = c(\"auto\", \"secs\", \"mins\", \"hours\", \"days\", \"weeks\"),   sort = TRUE,   work_schedule = NULL,   eventlog = deprecated() )"},{"path":"https://bupaverse.github.io/edeaR/reference/processing_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Processing Time — processing_time","text":"log log: Object class log derivatives (grouped_log, eventlog, activitylog, etc.). level character (default \"log\"): Level granularity analysis: \"log\" (default), \"trace\", \"case\", \"activity\", \"resource\", \"resource-activity\". information, see vignette(\"metrics\", \"edeaR\") 'Details' . append logical (default FALSE) : arguments append append_column deprecated favour augment. Indicating whether append results original log. Ignored level \"log\" \"trace\". append_column arguments append append_column deprecated favour augment. output columns append log, append = TRUE. Default column depends chosen level. units character (default \"auto\"): time unit processing times reported. one following values: \"auto\" (default), \"secs\", \"mins\", \"hours\", \"days\", \"weeks\". See also units argument difftime. sort logical (default TRUE): Sort decreasing processing time. \"case\" level . work_schedule schedule working hours. provided, working hours counted processing time. eventlog ; please use log instead.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/processing_time.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Processing Time — processing_time","text":"Argument level following options: \"log\" level, metric calculates summary statistics actual processing time per case, summarised complete event log. \"trace\" level, summary statistics processing time can calculated possible sequence activities appears event log. \"case\" level, list cases processing time provided. \"activity\" level, overview average processing time -service time- activity can calculated. \"resource\" level, metric calculates processing time per resource. \"resource-activity\" level, efficiency resources looking combination resource activity can investigated.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/processing_time.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Processing Time — processing_time","text":"processing_time(eventlog): Computes processing time eventlog. processing_time(grouped_eventlog): Computes processing time grouped_eventlog. processing_time(activitylog): Computes processing time activitylog. processing_time(grouped_activitylog): Computes processing time grouped_activitylog.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/processing_time.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Processing Time — processing_time","text":"Swennen, M. (2018). Using Event Log Knowledge Support Operational Exellence Techniques (Doctoral dissertation). Hasselt University.","code":""},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/reference/redo_repetitions_referral_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Referral matrix repetitons — redo_repetitions_referral_matrix","title":"Referral matrix repetitons — redo_repetitions_referral_matrix","text":"Provides list initatiors completers  redo repetitons","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/redo_repetitions_referral_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Referral matrix repetitons — redo_repetitions_referral_matrix","text":"","code":"redo_repetitions_referral_matrix(log, eventlog = deprecated())  # S3 method for eventlog redo_repetitions_referral_matrix(log, eventlog = deprecated())  # S3 method for activitylog redo_repetitions_referral_matrix(log, eventlog = deprecated())"},{"path":"https://bupaverse.github.io/edeaR/reference/redo_repetitions_referral_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Referral matrix repetitons — redo_repetitions_referral_matrix","text":"log log: Object class log derivatives (grouped_log, eventlog, activitylog, etc.). eventlog ; please use log instead.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/redo_repetitions_referral_matrix.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Referral matrix repetitons — redo_repetitions_referral_matrix","text":"redo_repetitions_referral_matrix(eventlog): Compute matrix eventlog redo_repetitions_referral_matrix(activitylog): Compute matrix activitylog","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/redo_repetitions_referral_matrix.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Referral matrix repetitons — redo_repetitions_referral_matrix","text":"Swennen, M. (2018). Using Event Log Knowledge Support Operational Exellence Techniques (Doctoral dissertation). Hasselt University.","code":""},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/reference/redo_selfloops_referral_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Referral matrix selfloops — redo_selfloops_referral_matrix","title":"Referral matrix selfloops — redo_selfloops_referral_matrix","text":"Provides list initatiors completers  redo selfloops","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/redo_selfloops_referral_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Referral matrix selfloops — redo_selfloops_referral_matrix","text":"","code":"redo_selfloops_referral_matrix(log, eventlog = deprecated())  # S3 method for eventlog redo_selfloops_referral_matrix(log, eventlog = deprecated())  # S3 method for activitylog redo_selfloops_referral_matrix(log, eventlog = deprecated())"},{"path":"https://bupaverse.github.io/edeaR/reference/redo_selfloops_referral_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Referral matrix selfloops — redo_selfloops_referral_matrix","text":"log log: Object class log derivatives (grouped_log, eventlog, activitylog, etc.). eventlog ; please use log instead.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/redo_selfloops_referral_matrix.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Referral matrix selfloops — redo_selfloops_referral_matrix","text":"redo_selfloops_referral_matrix(eventlog): Compute matrix eventlog redo_selfloops_referral_matrix(activitylog): Compute matrix activitylog","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/redo_selfloops_referral_matrix.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Referral matrix selfloops — redo_selfloops_referral_matrix","text":"Swennen, M. (2018). Using Event Log Knowledge Support Operational Exellence Techniques (Doctoral dissertation). Hasselt University.","code":""},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. magrittr %>%","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/resource_frequency.html","id":null,"dir":"Reference","previous_headings":"","what":"Resource Frequency — resource_frequency","title":"Resource Frequency — resource_frequency","text":"Analyses frequency resources different levels analysis.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/resource_frequency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resource Frequency — resource_frequency","text":"","code":"resource_frequency(   log,   level = c(\"log\", \"case\", \"activity\", \"resource\", \"resource-activity\"),   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )  # S3 method for eventlog resource_frequency(   log,   level = c(\"log\", \"case\", \"activity\", \"resource\", \"resource-activity\"),   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )  # S3 method for grouped_eventlog resource_frequency(   log,   level = c(\"log\", \"case\", \"activity\", \"resource\", \"resource-activity\"),   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )  # S3 method for activitylog resource_frequency(   log,   level = c(\"log\", \"case\", \"activity\", \"resource\", \"resource-activity\"),   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )  # S3 method for grouped_activitylog resource_frequency(   log,   level = c(\"log\", \"case\", \"activity\", \"resource\", \"resource-activity\"),   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )"},{"path":"https://bupaverse.github.io/edeaR/reference/resource_frequency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resource Frequency — resource_frequency","text":"log log: Object class log derivatives (grouped_log, eventlog, activitylog, etc.). level character (default \"log\"): Level granularity analysis: \"log\" (default), \"case\", \"activity\", \"resource\", \"resource-activity\". information, see vignette(\"metrics\", \"edeaR\") 'Details' . append logical (default FALSE) : arguments append append_column deprecated favour augment. Indicating whether append results original log. Ignored level \"log\" \"trace\". append_column arguments append append_column deprecated favour augment. output columns append log, append = TRUE. Default column depends chosen level. sort logical (default TRUE): Sort output count. levels frequency count output. eventlog ; please use log instead.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/resource_frequency.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Resource Frequency — resource_frequency","text":"Argument level following options: \"log\" level, summary statistics show number times resource executes activity complete log. \"case\" level, summary statistics frequency resources can used get better view variance different cases, get insight number different resources working case together number activities resource executes per case. \"activity\" level, resource frequency states many different resources executing specific activity complete log. \"resource\" level, metric simply shows absolute relative frequency occurrences resource complete log. \"resource-activity\" level, absolute relative number times resource-activity combination occurs complete log can calculated. Two different relative numbers provided , one resource perspective one activity perspective. resource perspective, denominator total number executions resource consideration. activity perspective, denominator total number occurrences activity consideration.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/resource_frequency.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Resource Frequency — resource_frequency","text":"resource_frequency(eventlog): Computes resource frequency eventlog. resource_frequency(grouped_eventlog): Computes resource frequency grouped_eventlog. resource_frequency(activitylog): Computes resource frequency activitylog. resource_frequency(grouped_activitylog): Computes resource frequency grouped_activitylog.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/resource_frequency.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Resource Frequency — resource_frequency","text":"Swennen, M. (2018). Using Event Log Knowledge Support Operational Exellence Techniques (Doctoral dissertation). Hasselt University.","code":""},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/reference/resource_involvement.html","id":null,"dir":"Reference","previous_headings":"","what":"Resource Involvement — resource_involvement","title":"Resource Involvement — resource_involvement","text":"Calculates resource resource-activity combination percentage cases present. Next resource_frequency, involvement resources cases can interest , e.g., decide \"indispensable\" . metric provided three levels analysis, cases, resources, resource-activity combinations.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/resource_involvement.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resource Involvement — resource_involvement","text":"","code":"resource_involvement(   log,   level = c(\"case\", \"resource\", \"resource-activity\"),   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )  # S3 method for log resource_involvement(   log,   level = c(\"case\", \"resource\", \"resource-activity\"),   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )  # S3 method for grouped_log resource_involvement(   log,   level = c(\"case\", \"resource\", \"resource-activity\"),   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )"},{"path":"https://bupaverse.github.io/edeaR/reference/resource_involvement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resource Involvement — resource_involvement","text":"log log: Object class log derivatives (grouped_log, eventlog, activitylog, etc.). level character (default \"case\"): Level granularity analysis: \"case\" (default), \"resource\", \"resource-activity\". information, see vignette(\"metrics\", \"edeaR\") 'Details' . append logical (default FALSE) : arguments append append_column deprecated favour augment. Indicating whether append results original log. Ignored level \"log\" \"trace\". append_column arguments append append_column deprecated favour augment. output columns append log, append = TRUE. Default column depends chosen level. sort logical (default TRUE): Sort output count. levels frequency count output. eventlog ; please use log instead.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/resource_involvement.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Resource Involvement — resource_involvement","text":"Argument level following options: \"case\" level, absolute relative number distinct resources executing activities case calculated, get overview cases handled small amount resources cases need resources, indicating higher level variance process. \"resource\" level, metric provides absolute relative number cases resource involved, indicating resources \"necessary\" within process others. \"resource-activity\" level, metric provides list resource-activity combinations absolute relative number cases resource-activity combination involved.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/resource_involvement.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Resource Involvement — resource_involvement","text":"resource_involvement(log): Computes resource involvement log. resource_involvement(grouped_log): Computes resource involvement grouped_log.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/resource_involvement.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Resource Involvement — resource_involvement","text":"Swennen, M. (2018). Using Event Log Knowledge Support Operational Exellence Techniques (Doctoral dissertation). Hasselt University.","code":""},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/reference/resource_specialisation.html","id":null,"dir":"Reference","previous_headings":"","what":"Resource Specialisation — resource_specialisation","title":"Resource Specialisation — resource_specialisation","text":"Analyses whether resources specialise specific activities. metric can give overview resources performing certain activities others, resources responsible containing knowledge capabilities one topic.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/resource_specialisation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resource Specialisation — resource_specialisation","text":"","code":"resource_specialisation(   log,   level = c(\"log\", \"case\", \"activity\", \"resource\"),   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )  resource_specialization(   log,   level = c(\"log\", \"case\", \"activity\", \"resource\"),   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )  # S3 method for log resource_specialisation(   log,   level = c(\"log\", \"case\", \"activity\", \"resource\"),   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )  # S3 method for grouped_log resource_specialisation(   log,   level = c(\"log\", \"case\", \"activity\", \"resource\"),   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )"},{"path":"https://bupaverse.github.io/edeaR/reference/resource_specialisation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resource Specialisation — resource_specialisation","text":"log log: Object class log derivatives (grouped_log, eventlog, activitylog, etc.). level character (default \"log\"): Level granularity analysis: \"log\" (default), \"case\", \"activity\", \"resource\". information, see vignette(\"metrics\", \"edeaR\") 'Details' . append logical (default FALSE) : arguments append append_column deprecated favour augment. Indicating whether append results original log. Ignored level \"log\" \"trace\". append_column arguments append append_column deprecated favour augment. output columns append log, append = TRUE. Default column depends chosen level. sort logical (default TRUE): Sort output count. levels frequency count output. eventlog ; please use log instead.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/resource_specialisation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Resource Specialisation — resource_specialisation","text":"Argument level following options: \"log\" level, metric provides summary statistics number distinct activities executed per resource. \"case\" level, metric provides number distinct activities executed within case together summary statistics distinct activities executed per resource case. \"activity\" level, metric provides overview absolute relative number different resources executing activity within complete log. give insights activities resources specialised . \"resource\" level, metric shows absolute relative number distinct activities resource executes.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/resource_specialisation.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Resource Specialisation — resource_specialisation","text":"resource_specialisation(log): Computes resource specialisation log. resource_specialisation(grouped_log): Computes resource specialisation grouped_log.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/resource_specialisation.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Resource Specialisation — resource_specialisation","text":"Swennen, M. (2018). Using Event Log Knowledge Support Operational Exellence Techniques (Doctoral dissertation). Hasselt University.","code":""},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/reference/setdiff.html","id":null,"dir":"Reference","previous_headings":"","what":"Set operations — setdiff","title":"Set operations — setdiff","text":"objects imported packages. Follow links see documentation. dplyr setdiff","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/setdiff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set operations — setdiff","text":"","code":"# S3 method for eventlog setdiff(x, y, ...)"},{"path":"https://bupaverse.github.io/edeaR/reference/setdiff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set operations — setdiff","text":"x Eventlog y Eventlog","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/setdiff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set operations — setdiff","text":"Eventlog activity instances x belong y","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/setdiff.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Set operations — setdiff","text":"setdiff(eventlog): Setdiff eventlogs","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/size_of_repetitions.html","id":null,"dir":"Reference","previous_headings":"","what":"Metric: Size of repetitions — size_of_repetitions","title":"Metric: Size of repetitions — size_of_repetitions","text":"Provides summary statistics sizes repetitions.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/size_of_repetitions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metric: Size of repetitions — size_of_repetitions","text":"","code":"size_of_repetitions(   log,   type = c(\"all\", \"repeat\", \"redo\"),   level = c(\"log\", \"case\", \"activity\", \"resource\", \"resource-activity\"),   append = deprecated(),   append_column = NULL,   eventlog = deprecated() )  # S3 method for eventlog size_of_repetitions(   log,   type = c(\"all\", \"repeat\", \"redo\"),   level = c(\"log\", \"case\", \"activity\", \"resource\", \"resource-activity\"),   append = deprecated(),   append_column = NULL,   eventlog = deprecated() )  # S3 method for grouped_eventlog size_of_repetitions(   log,   type = c(\"repeat\", \"redo\"),   level = c(\"log\", \"case\", \"activity\", \"resource\", \"resource-activity\"),   append = deprecated(),   append_column = NULL,   eventlog = deprecated() )  # S3 method for activitylog size_of_repetitions(   log,   type = c(\"repeat\", \"redo\"),   level = c(\"log\", \"case\", \"activity\", \"resource\", \"resource-activity\"),   append = deprecated(),   append_column = NULL,   eventlog = deprecated() )  # S3 method for grouped_activitylog size_of_repetitions(   log,   type = c(\"repeat\", \"redo\"),   level = c(\"log\", \"case\", \"activity\", \"resource\", \"resource-activity\"),   append = deprecated(),   append_column = NULL,   eventlog = deprecated() )"},{"path":"https://bupaverse.github.io/edeaR/reference/size_of_repetitions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metric: Size of repetitions — size_of_repetitions","text":"log log: Object class log derivatives (grouped_log, eventlog, activitylog, etc.). type character (default \"\"): type repetitions: \"\" (default), \"repeat\", \"redo\". information, see 'Details' . level character (default \"log\"): Level granularity analysis: \"log\" (default), \"case\", \"activity\", \"resource\", \"resource-activity\". information, see vignette(\"metrics\", \"edeaR\") 'Details' . append logical (default FALSE) : arguments append append_column deprecated favour augment. Indicating whether append results original log. Ignored level \"log\" \"trace\". append_column arguments append append_column deprecated favour augment. output columns append log, append = TRUE. Default column depends chosen level. eventlog ; please use log instead.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/size_of_repetitions.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Metric: Size of repetitions — size_of_repetitions","text":"size_of_repetitions(eventlog): Size repetitions eventlog size_of_repetitions(grouped_eventlog): Size repetitions grouped event log size_of_repetitions(activitylog): Size repetitions activitylog size_of_repetitions(grouped_activitylog): Size repetitions grouped activitylog","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/size_of_repetitions.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Metric: Size of repetitions — size_of_repetitions","text":"Swennen, M. (2018). Using Event Log Knowledge Support Operational Exellence Techniques (Doctoral dissertation). Hasselt University.","code":""},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/reference/size_of_selfloops.html","id":null,"dir":"Reference","previous_headings":"","what":"Metric: Size of selfloops — size_of_selfloops","title":"Metric: Size of selfloops — size_of_selfloops","text":"Provides summary statistics sizes selfloops","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/size_of_selfloops.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metric: Size of selfloops — size_of_selfloops","text":"","code":"size_of_selfloops(   log,   type = c(\"all\", \"repeat\", \"redo\"),   level = c(\"log\", \"case\", \"activity\", \"resource\", \"resource-activity\"),   append = deprecated(),   append_column = NULL,   eventlog = deprecated() )  # S3 method for eventlog size_of_selfloops(   log,   type = c(\"all\", \"repeat\", \"redo\"),   level = c(\"log\", \"case\", \"activity\", \"resource\", \"resource-activity\"),   append = deprecated(),   append_column = NULL,   eventlog = deprecated() )  # S3 method for grouped_eventlog size_of_selfloops(   log,   type = c(\"repeat\", \"redo\"),   level = c(\"log\", \"case\", \"activity\", \"resource\", \"resource-acitivty\"),   append = deprecated(),   append_column = NULL,   eventlog = deprecated() )  # S3 method for activitylog size_of_selfloops(   log,   type = c(\"all\", \"repeat\", \"redo\"),   level = c(\"log\", \"case\", \"activity\", \"resource\", \"resource-activity\"),   append = deprecated(),   append_column = NULL,   eventlog = deprecated() )  # S3 method for grouped_activitylog size_of_selfloops(   log,   type = c(\"all\", \"repeat\", \"redo\"),   level = c(\"log\", \"case\", \"activity\", \"resource\", \"resource-activity\"),   append = deprecated(),   append_column = NULL,   eventlog = deprecated() )"},{"path":"https://bupaverse.github.io/edeaR/reference/size_of_selfloops.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metric: Size of selfloops — size_of_selfloops","text":"log log: Object class log derivatives (grouped_log, eventlog, activitylog, etc.). type character (default \"\"): type repetitions: \"\" (default), \"repeat\", \"redo\". information, see 'Details' . level character (default \"log\"): Level granularity analysis: \"log\" (default), \"case\", \"activity\", \"resource\", \"resource-activity\". information, see vignette(\"metrics\", \"edeaR\") 'Details' . append logical (default FALSE) : arguments append append_column deprecated favour augment. Indicating whether append results original log. Ignored level \"log\" \"trace\". append_column arguments append append_column deprecated favour augment. output columns append log, append = TRUE. Default column depends chosen level. eventlog ; please use log instead.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/size_of_selfloops.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Metric: Size of selfloops — size_of_selfloops","text":"size_of_selfloops(eventlog): Size selfloops eventlog size_of_selfloops(grouped_eventlog): Size selfloops grouped eventlog size_of_selfloops(activitylog): Size selfloops activitylog size_of_selfloops(grouped_activitylog): Size selfloops grouped activitylog","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/size_of_selfloops.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Metric: Size of selfloops — size_of_selfloops","text":"Swennen, M. (2018). Using Event Log Knowledge Support Operational Exellence Techniques (Doctoral dissertation). Hasselt University.","code":""},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/reference/start_activities.html","id":null,"dir":"Reference","previous_headings":"","what":"Start Activities — start_activities","title":"Start Activities — start_activities","text":"Analyse start activities process.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/start_activities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Start Activities — start_activities","text":"","code":"start_activities(   log,   level = c(\"log\", \"case\", \"activity\", \"resource\", \"resource-activity\"),   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )  # S3 method for eventlog start_activities(   log,   level = c(\"log\", \"case\", \"activity\", \"resource\", \"resource-activity\"),   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )  # S3 method for grouped_eventlog start_activities(   log,   level = c(\"log\", \"case\", \"activity\", \"resource\", \"resource-activity\"),   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )  # S3 method for activitylog start_activities(   log,   level = c(\"log\", \"case\", \"activity\", \"resource\", \"resource-activity\"),   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )  # S3 method for grouped_activitylog start_activities(   log,   level = c(\"log\", \"case\", \"activity\", \"resource\", \"resource-activity\"),   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )"},{"path":"https://bupaverse.github.io/edeaR/reference/start_activities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start Activities — start_activities","text":"log log: Object class log derivatives (grouped_log, eventlog, activitylog, etc.). level character (default \"log\"): Level granularity analysis: \"log\" (default), \"case\", \"activity\", \"resource\", \"resource-activity\". information, see vignette(\"metrics\", \"edeaR\") 'Details' . append logical (default FALSE) : arguments append append_column deprecated favour augment. Indicating whether append results original log. Ignored level \"log\" \"trace\". append_column arguments append append_column deprecated favour augment. output columns append log, append = TRUE. Default column depends chosen level. sort logical (default TRUE): Sort output count. levels frequency count output. eventlog ; please use log instead.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/start_activities.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Start Activities — start_activities","text":"Argument level following options: \"log\" level, metric shows absolute relative number activities first activity one cases. \"case\" level, metric provides overview start activity case. \"activity\" level, metric calculates activity absolute relative number cases start activity type. Similar end_activities metric, relative number calculated portion number cases, number \"opportunities\" activity start activity. cumulative sum added insight number activities required cover certain part total. \"resource\" level, overview resources execute first activity per case provided. \"resource-activity\" level, metric shows occurring resource-activity combination absolute relative number times resource executes activity start activity case.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/start_activities.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Start Activities — start_activities","text":"start_activities(eventlog): Computes start activities eventlog. start_activities(grouped_eventlog): Computes start activities grouped_eventlog. start_activities(activitylog): Computes start activities activitylog. start_activities(grouped_activitylog): Computes start activities grouped_activitylog.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/start_activities.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Start Activities — start_activities","text":"Swennen, M. (2018). Using Event Log Knowledge Support Operational Exellence Techniques (Doctoral dissertation). Hasselt University.","code":""},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/reference/throughput_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Throughput Time of Cases — throughput_time","title":"Throughput Time of Cases — throughput_time","text":"Provides summary statistics concerning throughput times cases.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/throughput_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Throughput Time of Cases — throughput_time","text":"","code":"throughput_time(   log,   level = c(\"log\", \"trace\", \"case\"),   append = deprecated(),   append_column = NULL,   units = c(\"auto\", \"secs\", \"mins\", \"hours\", \"days\", \"weeks\"),   sort = TRUE,   work_schedule = NULL,   eventlog = deprecated() )  # S3 method for eventlog throughput_time(   log,   level = c(\"log\", \"trace\", \"case\"),   append = deprecated(),   append_column = NULL,   units = c(\"auto\", \"secs\", \"mins\", \"hours\", \"days\", \"weeks\"),   sort = TRUE,   work_schedule = NULL,   eventlog = deprecated() )  # S3 method for grouped_eventlog throughput_time(   log,   level = c(\"log\", \"trace\", \"case\"),   append = deprecated(),   append_column = NULL,   units = c(\"auto\", \"secs\", \"mins\", \"hours\", \"days\", \"weeks\"),   sort = TRUE,   work_schedule = NULL,   eventlog = deprecated() )  # S3 method for activitylog throughput_time(   log,   level = c(\"log\", \"trace\", \"case\"),   append = deprecated(),   append_column = NULL,   units = c(\"auto\", \"secs\", \"mins\", \"hours\", \"days\", \"weeks\"),   sort = TRUE,   work_schedule = NULL,   eventlog = deprecated() )  # S3 method for grouped_activitylog throughput_time(   log,   level = c(\"log\", \"trace\", \"case\"),   append = deprecated(),   append_column = NULL,   units = c(\"auto\", \"secs\", \"mins\", \"hours\", \"days\", \"weeks\"),   sort = TRUE,   work_schedule = NULL,   eventlog = deprecated() )"},{"path":"https://bupaverse.github.io/edeaR/reference/throughput_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Throughput Time of Cases — throughput_time","text":"log log: Object class log derivatives (grouped_log, eventlog, activitylog, etc.). level character (default \"log\"): Level granularity analysis: \"log\" (default), \"trace\", \"case\". information, see vignette(\"metrics\", \"edeaR\") 'Details' . append logical (default FALSE) : arguments append append_column deprecated favour augment. Indicating whether append results original log. Ignored level \"log\" \"trace\". append_column arguments append append_column deprecated favour augment. output columns append log, append = TRUE. Default column depends chosen level. units character (default \"auto\"): time unit throughput times reported. one following values: \"auto\" (default), \"secs\", \"mins\", \"hours\", \"days\", \"weeks\". See also units argument difftime. sort logical (default TRUE): Sort output count. levels frequency count output. work_schedule schedule working hours. provided, working hours counted processing time. eventlog ; please use log instead.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/throughput_time.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Throughput Time of Cases — throughput_time","text":"Argument level following options: \"log\" level, summary statistics describing throughput time cases aggregated fashion. \"trace\" level, throughput time different process variants traces log calculated. \"case\" level, throughput time defined total duration case, difference timestamp end event timestamp start event case. Possible idle_time also included calculation. levels (e.g. \"activity\", \"resource\", \"resource-activity\"), throughput time equal processing_time , therefore, supported method.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/throughput_time.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Throughput Time of Cases — throughput_time","text":"throughput_time(eventlog): Computes throughput time eventlog. throughput_time(grouped_eventlog): Computes throughput time grouped_eventlog. throughput_time(activitylog): Computes throughput time activitylog. throughput_time(grouped_activitylog): Computes throughput time grouped_activitylog.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/throughput_time.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Throughput Time of Cases — throughput_time","text":"Swennen, M. (2018). Using Event Log Knowledge Support Operational Exellence Techniques (Doctoral dissertation). Hasselt University.","code":""},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/reference/trace_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Trace Coverage — trace_coverage","title":"Trace Coverage — trace_coverage","text":"Analyses structuredness log use trace frequencies.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/trace_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trace Coverage — trace_coverage","text":"","code":"trace_coverage(   log,   level = c(\"log\", \"trace\", \"case\"),   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )  # S3 method for log trace_coverage(   log,   level = c(\"log\", \"trace\", \"case\"),   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )  # S3 method for grouped_log trace_coverage(   log,   level = c(\"log\", \"trace\", \"case\"),   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )"},{"path":"https://bupaverse.github.io/edeaR/reference/trace_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trace Coverage — trace_coverage","text":"log log: Object class log derivatives (grouped_log, eventlog, activitylog, etc.). level character (default \"log\"): Level granularity analysis: \"log\" (default), \"trace\", \"case\". information, see vignette(\"metrics\", \"edeaR\") 'Details' . append logical (default FALSE) : arguments append append_column deprecated favour augment. Indicating whether append results original log. Ignored level \"log\" \"trace\". append_column arguments append append_column deprecated favour augment. output columns append log, append = TRUE. Default column depends chosen level. sort logical (default TRUE): Sort output count. levels frequency count output. eventlog ; please use log instead.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/trace_coverage.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Trace Coverage — trace_coverage","text":"Argument level following options: \"log\" level, summary statistics coverage traces returned. \"trace\" level, absolute relative frequency trace returned. \"case\" level, coverage corresponding trace returned case.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/trace_coverage.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Trace Coverage — trace_coverage","text":"trace_coverage(log): Calculates trace coverage metric log. trace_coverage(grouped_log): Calculates trace coverage metric grouped_log.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/trace_coverage.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Trace Coverage — trace_coverage","text":"Swennen, M. (2018). Using Event Log Knowledge Support Operational Exellence Techniques (Doctoral dissertation). Hasselt University.","code":""},{"path":[]},{"path":"https://bupaverse.github.io/edeaR/reference/trace_length.html","id":null,"dir":"Reference","previous_headings":"","what":"Trace Length — trace_length","title":"Trace Length — trace_length","text":"Analysis trace lengths metric provides overview number activities occur trace. important remark metric takes account instance activity, individual lifecycle events.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/trace_length.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trace Length — trace_length","text":"","code":"trace_length(   log,   level = c(\"log\", \"trace\", \"case\"),   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )  # S3 method for eventlog trace_length(   log,   level = c(\"log\", \"trace\", \"case\"),   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )  # S3 method for grouped_eventlog trace_length(   log,   level = c(\"log\", \"trace\", \"case\"),   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )  # S3 method for activitylog trace_length(   log,   level = c(\"log\", \"trace\", \"case\"),   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )  # S3 method for grouped_activitylog trace_length(   log,   level = c(\"log\", \"trace\", \"case\"),   append = deprecated(),   append_column = NULL,   sort = TRUE,   eventlog = deprecated() )"},{"path":"https://bupaverse.github.io/edeaR/reference/trace_length.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trace Length — trace_length","text":"log log: Object class log derivatives (grouped_log, eventlog, activitylog, etc.). level character (default \"log\"): Level granularity analysis: \"log\" (default), \"trace\", \"case\". information, see vignette(\"metrics\", \"edeaR\") 'Details' . append logical (default FALSE) : arguments append append_column deprecated favour augment. Indicating whether append results original log. Ignored level \"log\" \"trace\". append_column arguments append append_column deprecated favour augment. output columns append log, append = TRUE. Default column depends chosen level. sort logical (default TRUE): Sort output count. levels frequency count output. eventlog ; please use log instead.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/trace_length.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Trace Length — trace_length","text":"Argument level following options: \"log\" level, summary statistics describing trace length cases aggregated fashion. \"trace\" level, trace length different process variants traces log calculated. \"case\" level, trace lengths case computed.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/trace_length.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Trace Length — trace_length","text":"trace_length(eventlog): Computes trace length eventlog. trace_length(grouped_eventlog): Computes trace length grouped_eventlog. trace_length(activitylog): Computes trace length activitylog. trace_length(grouped_activitylog): Computes trace length grouped_activitylog.","code":""},{"path":"https://bupaverse.github.io/edeaR/reference/trace_length.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Trace Length — trace_length","text":"Swennen, M. (2018). Using Event Log Knowledge Support Operational Exellence Techniques (Doctoral dissertation). Hasselt University.","code":""},{"path":[]}]
