% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filter_case.R
\name{filter_case}
\alias{filter_case}
\alias{filter_case.log}
\alias{filter_case.grouped_log}
\title{Filter Case}
\usage{
filter_case(log, cases = NULL, reverse = FALSE, eventlog = deprecated())

\method{filter_case}{log}(log, cases = NULL, reverse = FALSE, eventlog = deprecated())

\method{filter_case}{grouped_log}(log, cases = NULL, reverse = FALSE, eventlog = deprecated())
}
\arguments{
\item{log}{\code{\link[bupaR]{log}}: Object of class \code{\link[bupaR]{log}} or derivatives (\code{\link[bupaR]{grouped_log}}, \code{\link[bupaR]{eventlog}}, \code{\link[bupaR]{activitylog}}, etc.).}

\item{cases}{A vector of cases identifiers.}

\item{reverse}{\code{\link{logical}} (default \code{FALSE}): Indicating whether the selection should be reversed.}

\item{eventlog}{\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#deprecated}{\figure{lifecycle-deprecated.svg}{options: alt='[Deprecated]'}}}{\strong{[Deprecated]}}; please use \code{log} instead.}
}
\value{
When given an object of type \code{\link[bupaR]{log}}, it will return a filtered \code{\link[bupaR]{log}}.
When given an object of type \code{\link[bupaR]{grouped_log}}, the filter will be applied in a stratified way (i.e. each separately for each group).
The returned log will be grouped on the same variables as the original log.
}
\description{
Filters the log based on case identifier. This method has a \code{cases} argument,
to which a vector of identifiers can be given. The selection can be negated with the \code{reverse} argument.
}
\section{Methods (by class)}{
\itemize{
\item \code{log}: Filters cases for a \code{\link[bupaR]{log}}.

\item \code{grouped_log}: Filters cases for a \code{\link[bupaR]{grouped_log}}.
}}

\references{
Swennen, M. (2018). Using Event Log Knowledge to Support Operational Exellence Techniques (Doctoral dissertation). Hasselt University.
}
\seealso{
Other filters: 
\code{\link{filter_activity_frequency}()},
\code{\link{filter_activity_instance}()},
\code{\link{filter_activity_presence}()},
\code{\link{filter_activity}()},
\code{\link{filter_case_condition}()},
\code{\link{filter_endpoints_conditions}()},
\code{\link{filter_endpoints}()},
\code{\link{filter_precedence_condition}()},
\code{\link{filter_precedence_resource}()},
\code{\link{filter_precedence}()},
\code{\link{filter_processing_time}()},
\code{\link{filter_resource}()}
}
\concept{filters}
