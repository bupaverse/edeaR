% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/number_of_selfloops.R
\name{number_of_selfloops}
\alias{number_of_selfloops}
\alias{number_of_selfloops.eventlog}
\alias{number_of_selfloops.grouped_eventlog}
\title{Metric: Number of selfloops in trace}
\usage{
number_of_selfloops(
  eventlog,
  type = c("all", "repeat", "redo"),
  level = c("log", "case", "activity", "resource", "resource-activity"),
  append = FALSE,
  append_column = NULL,
  sort = TRUE,
  ...
)

\method{number_of_selfloops}{eventlog}(
  eventlog,
  type = c("all", "repeat", "redo"),
  level = c("log", "case", "activity", "resource", "resource-activity"),
  append = FALSE,
  append_column = NULL,
  sort = TRUE,
  ...
)

\method{number_of_selfloops}{grouped_eventlog}(
  eventlog,
  type = c("all", "repeat", "redo"),
  level = c("log", "case", "activity", "resource", "resource-activity"),
  append = FALSE,
  append_column = NULL,
  sort = TRUE,
  ...
)
}
\arguments{
\item{eventlog}{\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#deprecated}{\figure{lifecycle-deprecated.svg}{options: alt='[Deprecated]'}}}{\strong{[Deprecated]}}; please use \code{log} instead.}

\item{type}{The type of repetitions, either all, repeat or redo.}

\item{level}{\code{\link{character}} (default \code{"log"}): Level of granularity for the analysis: \code{"log"}, \code{"case"}, \code{"activity"}, \code{"resource"}, or \code{"resource-activity"}.
For more information, see \code{vignette("metrics", "edeaR")} and 'Details' below.}

\item{append}{\code{\link{logical}} (default \code{FALSE}) \ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#deprecated}{\figure{lifecycle-deprecated.svg}{options: alt='[Deprecated]'}}}{\strong{[Deprecated]}}: Indicating whether to append results to original log. Ignored when level is \code{log} or \code{trace}.}

\item{append_column}{\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#deprecated}{\figure{lifecycle-deprecated.svg}{options: alt='[Deprecated]'}}}{\strong{[Deprecated]}} Which of the output columns to append to log, if \code{append = TRUE}. Default column depends on chosen level.}

\item{sort}{\code{\link{logical}} (default \code{TRUE}): Sort output on count. Only for levels with frequency count output.}

\item{...}{\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#deprecated}{\figure{lifecycle-deprecated.svg}{options: alt='[Deprecated]'}}}{\strong{[Deprecated]}} Deprecated arguments}
}
\description{
Provides information statistics on the number of selfloops.
}
\details{
Activity instances of the same activity type that are executed more than
once immediately after each other by the same resource are in a self-loop (length-1-loop).
If an activity instance of the same activity type is executed 3 times
after each other by the same resource, this is defined as a size 2 self-loop.

Two types of self-loops are defined, which are repeat self-loops and redo self-loops. Repeat self-loops are
activity executions of the same activity type that are executed immediately following
each other by the same resource. Redo self-loops are activity executions of the
same activity type that are executed immediately following each other by a different
resource. Repeat and redo repetitions are explained further on.

These metrics are presented on five different levels of analysis, which are the
complete event log, cases, activities, resources and resource-activity combinations.

\itemize{

\item On the level of the complete event log, the summary statistics of the
number of self-loops within a trace can give a first insight in the amount of
waste in an event log. As stated earlier, each combination of two occurrences of
the same activity executed by the same resource will be counted as one repeat
self-loop of this activity.

\if{html}{\out{<div class="sourceCode">}}\preformatted{\\item This metric on the level of cases provides
an overview of the absolute and relative number of repeat and redo self-loops
in each case.  To calculate the relative number, each (repeat or
 redo) self-loop is counted as 1 occurrence, and the other
 activity instances are also counted as 1.

 \\item On the level of the distinct activities in the event log, the absolute and relative number of self-loops per
 activity can be an indication for the company which activities are causing the
 most waste in the process.

 \\item Similar to the metric on the level of the
 activities, the number of self-loops on the level of the resources executing the
 activities can give a company insights in which employee needs to repeat his or
 her work most often within a case, or for which employee the work he or she
 did should be redone by another employee within the same case. This metric
 shows the absolute and relative number of both repeat and redo self-loops for
 each resource in the event log.
}\if{html}{\out{</div>}}

\item Finally, the metric can be applied
to the level of the specifc resource-activity combinations, in order to get an
insight in which activities are the most crucial for which resources. This metric
shows the absolute and relative number of both repeat and redo self-loops for
each of the resource-activity combinations that occur in the event log. Two
different relative numbers are provided here, one from the resource perspective
and one from the activity perspective. At the resource perspective, the denominator
is the total number of executions by the resource under consideration.
At the activity perspective, the denominator is the total number of occurrences
of the activity under consideration.

}
}
\section{Methods (by class)}{
\itemize{
\item \code{eventlog}: Compute number of selfloops for eventlog

\item \code{grouped_eventlog}: Compute number of selfloops for grouped eventlog
}}

\references{
Swennen, M. (2018). Using Event Log Knowledge to Support Operational Exellence Techniques (Doctoral dissertation). Hasselt University.
}
\seealso{
Other metrics: 
\code{\link{activity_presence}()},
\code{\link{end_activities}()},
\code{\link{processing_time}()}
}
